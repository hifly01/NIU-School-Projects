1                   J E S 2  J O B  L O G  --  S Y S T E M  2 9 6 4  --  N O D E  S V S C J E S 2
0
 22.14.02 JOB01389 ---- SUNDAY,    06 DEC 2020 ----
 22.14.02 JOB01389  IRR010I  USERID KC03I4C  IS ASSIGNED TO THIS JOB.
 22.14.06 JOB01389  ICH70001I KC03I4C  LAST ACCESS AT 22:08:58 ON SUNDAY, DECEMBER 6, 2020
 22.14.06 JOB01389  $HASP373 KC03I4CA STARTED - INIT 1    - CLASS A        - SYS 2964
 22.14.15 JOB01389  $HASP395 KC03I4CA ENDED - RC=0000
0------ JES2 JOB STATISTICS ------
-  06 DEC 2020 JOB EXECUTION DATE
-        1,761 CARDS READ
-        3,599 SYSOUT PRINT RECORDS
-            0 SYSOUT PUNCH RECORDS
-          245 SYSOUT SPOOL KBYTES
-         0.22 MINUTES EXECUTION TIME
         1 //KC03I4CA JOB ,'CHARLES ALMS',MSGCLASS=H                               JOB01389
           //********************************************************************
           //* CSCI 465               ASSIGNMENT 8               FALL 2020      *
           //*                                                                  *
           //* DEVELOPER NAME: CHARELES ALMS                                    *
           //* DATE DUE: 12/05/2020                                             *
           //*                                                                  *
           //* Purpose: create a program to calculate the average and deposit/  *
           //* withdrawl amouunts from ochestra accounts that will be printed   *
           //* on a report. This assignment reads from 4 fileS and prints 2     *
           //* reports on the same output by opening and closing the files when *
           //* needed. File 2 is based off information of file 1                *
           //*                                                                  *
           //* This assignment is based off of assignment 7 and will instead use*
           //* other programs to run                                            *
           //********************************************************************
           //*
           //********************************************************************
           //* JSTEP01 - performs the sort program                              *
           //*                                                                  *
           //* SORTIN - SORTS THE INPUT FOR THE DATA WE WANT SORTED             *
           //*                                                                  *
           //* SORTOUT - Output FOR THE SORTED DATA                             *
           //*                                                                  *
           //* SYSOUT - Output                                                  *
           //*                                                                  *
           //* SYSIN - INPUT FOR THE PARAMETERS TO BE SORTED                    *
           //********************************************************************
         2 //JSTEP01 EXEC PGM=SORT,PARM='CMP=CLC'
           //*
         3 //SORTIN  DD DSN=KC02322.CSCI465.DATAFA20(FUNDS),DISP=SHR
           //*
         4 //SORTOUT DD DSN=&&SORTED,SPACE=(TRK,(1,5)),DISP=(NEW,PASS)
           //*
         5 //SYSOUT  DD SYSOUT=*
           //*
         6 //SYSIN   DD *
           //********************************************************************
           //* JSTEP02 -  calls the COBOL compiler                              *
           //*                                                                  *
           //* SYSIN - the input for the COBOL program that was provided to us  *
           //*                                                                  *
           //* SYSLIB - GETS THE COPYLIN FORM PROFESSOR DECKER                  *
           //*                                                                  *
           //* SYSLIN - Output will be in a temp labeled &&OBJMOD1              *
           //*                                                                  *
           //* SYSPRINT - Output messages for the binder                        *
           //*                                                                  *
           //* SYSUT1-15 - Data pads/scratch work used by the compiler          *
           //*                                                                  *
           //* SYSUDECK - Part of the SYSUT1-15 for the COBOL compiler          *
           //*                                                                  *
           //* SYSDUMP -  Output messages for abends                            *
           //********************************************************************
           //*
         7 //JSTEP02 EXEC PGM=IGYCRCTL,PARM=APOST,REGION=0M
           //*
         8 //SYSLIB  DD DSN=KC02322.CSCI465.COPYLIB,DISP=SHR
           //*
         9 //SYSIN   DD *
           //*
        10 //SYSLIN   DD DSN=&&OBJMOD1,SPACE=(CYL,(1,1)),
           //            DISP=(MOD,PASS)
           //*
        11 //SYSPRINT DD SYSOUT=*
           //*
        12 //SYSUT1   DD SPACE=(CYL,(1,1))
        13 //SYSUT2   DD SPACE=(CYL,(1,1))
        14 //SYSUT3   DD SPACE=(CYL,(1,1))
        15 //SYSUT4   DD SPACE=(CYL,(1,1))
        16 //SYSUT5   DD SPACE=(CYL,(1,1))
        17 //SYSUT6   DD SPACE=(CYL,(1,1))
        18 //SYSUT7   DD SPACE=(CYL,(1,1))
        19 //SYSUT8   DD SPACE=(CYL,(1,1))
        20 //SYSUT9   DD SPACE=(CYL,(1,1))
        21 //SYSUT10  DD SPACE=(CYL,(1,1))
        22 //SYSUT11  DD SPACE=(CYL,(1,1))
        23 //SYSUT12  DD SPACE=(CYL,(1,1))
        24 //SYSUT13  DD SPACE=(CYL,(1,1))
        25 //SYSUT14  DD SPACE=(CYL,(1,1))
        26 //SYSUT15  DD SPACE=(CYL,(1,1))
        27 //SYSMDECK DD SPACE=(CYL,(1,1))
           //*
        28 //SYSUDUMP DD SYSOUT=*
           //*
           //********************************************************************
           //* JSTEP03 WILL RUN THE COBOL SUB PROGRAM, BLDFUND FOR CREATING THE *
           //* FUND TABLE. ENDOWMT 5 WILL NOT CREATE IT LIKE IN THE LAST ASSIGN *
           //*                                                                  *
           //* SYSLIB GETS THE COPY LIB FROM RPOFESSOR DECKER                   *
           //*                                                                  *
           //* SYSIN IS THE COBOL PROGRAM 'BLDFUND'                             *
           //*                                                                  *
           //* SYSLIN - Output will be in a temp labeled &&OBJMOD2              *
           //*                                                                  *
           //* SYSPRINT - Output messages for the binder                        *
           //*                                                                  *
           //* SYSUT1-15 - Data pads/scratch work used by the compiler          *
           //*                                                                  *
           //* SYSUDECK - Part of the SYSUT1-15 for the COBOL compiler          *
           //*                                                                  *
           //* SYSDUMP -  Output messages for abends                            *
           //********************************************************************
        29 //JSTEP03 EXEC PGM=IGYCRCTL,PARM=APOST,REGION=0M,COND=(0,LT)
           //*
        30 //SYSLIB  DD DSN=KC02322.CSCI465.COPYLIB,DISP=SHR
           //*
        31 //SYSIN   DD *
           //*
        32 //SYSLIN   DD DSN=&&OBJMOD2,SPACE=(CYL,(1,1)),
           //            DISP=(MOD,PASS)
           //*
        33 //SYSPRINT DD SYSOUT=*
           //*
        34 //SYSUT1   DD SPACE=(CYL,(1,1))
        35 //SYSUT2   DD SPACE=(CYL,(1,1))
        36 //SYSUT3   DD SPACE=(CYL,(1,1))
        37 //SYSUT4   DD SPACE=(CYL,(1,1))
        38 //SYSUT5   DD SPACE=(CYL,(1,1))
        39 //SYSUT6   DD SPACE=(CYL,(1,1))
        40 //SYSUT7   DD SPACE=(CYL,(1,1))
        41 //SYSUT8   DD SPACE=(CYL,(1,1))
        42 //SYSUT9   DD SPACE=(CYL,(1,1))
        43 //SYSUT10  DD SPACE=(CYL,(1,1))
        44 //SYSUT11  DD SPACE=(CYL,(1,1))
        45 //SYSUT12  DD SPACE=(CYL,(1,1))
        46 //SYSUT13  DD SPACE=(CYL,(1,1))
        47 //SYSUT14  DD SPACE=(CYL,(1,1))
        48 //SYSUT15  DD SPACE=(CYL,(1,1))
        49 //SYSMDECK DD SPACE=(CYL,(1,1))
           //*
        50 //SYSUDUMP DD SYSOUT=*
           //*
           //*******************************************************************
           //* JSTEP04 WILL BE THE BINDER FOR ENDOWMT5 AND BULDFUND PROGRAMS   *
           //*                                                                 *
           //* SYSLIB - required for the compiler                              *
           //*                                                                 *
           //* SYSLIN - grabs the TEMPS OBJMOD1 and OBJMOD2                    *
           //* AMODE(24) is used for any abends                                *
           //*                                                                 *
           //* SYSLMOD - Load module/program object stored in PDSE             *
           //*                                                                 *
           //* SYSPRINT - Output of the registers for abend                    *
           //*                                                                 *
           //* SYSUT1 saved space for the binding                              *
           //*******************************************************************
        51 //JSTEP04 EXEC PGM=HEWL,COND=(0,LT)
           //*
        52 //SYSLIB  DD DSN=CEE.SCEELKED,DISP=SHR
           //*
        53 //SYSLIN  DD DSN=&&OBJMOD1,DISP=(OLD,DELETE)
        54 //        DD DSN=&&OBJMOD2,DISP=(OLD,DELETE)
        55 //        DD *
           //*
        56 //SYSLMOD DD DSN=KC03I4C.CSCI465.LOADLIB(ENDOWMT5),DISP=MOD
           //*
        57 //SYSPRINT DD SYSOUT=*
           //*
        58 //SYSUT1   DD SPACE=(CYL,(1,1))
           //*
           //*******************************************************************
           //* JSTEP05 WILL CREATE THE BLDORCH SUBPROGRAM                      *
           //*                                                                 *
           //* SYSLIB shows where IBM macros are found                         *
           //*                                                                 *
           //* SYSIN is the assembler program 'BLDORCH'                        *
           //*                                                                 *
           //* SYSLIN creates a temp dataset called OBJMOD3                    *
           //*                                                                 *
           //* SYSUT1 scratchpad used by the assembler                         *
           //*                                                                 *
           //* SYSPRINT - Output of the registers for abend                    *
           //*******************************************************************
        59 //JSTEP05  EXEC PGM=ASMA90,PARM=ASA
           //*
        60 //SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
           //*
        61 //SYSIN    DD *
           //*
        62 //SYSLIN   DD DSN=&&OBJMOD3,SPACE=(3040,(40,40),,,ROUND),
           //            DISP=(MOD,PASS,DELETE)
           //*
        63 //SYSUT1   DD SPACE=(16384,(120,120),,,ROUND)
           //*
        64 //SYSPRINT DD SYSOUT=*
           //*
           //*******************************************************************
           //* JSTEP06 WILL BE FOR THE BINDER OF THE BULDORCH PROGRAM          *
           //*                                                                 *
           //* SYSLIB indicates where the binder is stored                     *
           //*                                                                 *
           //* SYSLIN compiles OBJMOD3 from JSTEP05                            *
           //*                                                                 *
           //* SYSLMOD stores the program object into my personal load libary  *
           //*                                                                 *
           //* SYSPRINT - Output of the registers for abend                    *
           //*******************************************************************
        65 //JSTEP06  EXEC PGM=HEWL,COND=(0,LT)
           //*
        66 //SYSLIB   DD DSN=CEE.SCEELKED,DISP=SHR
           //*
        67 //SYSLIN   DD DSN=&&OBJMOD3,DISP=(OLD,DELETE)
           //*
        68 //SYSLMOD  DD DSN=KC03I4C.CSCI465.LOADLIB(BLDORCH),
           //            SPACE=(1024,(50,20,1)),DSNTYPE=LIBRARY,
           //            DISP=(MOD,KEEP,KEEP)
           //*
        69 //SYSPRINT DD SYSOUT=*
           //*******************************************************************
           //* JSTEP07 WILL BE THE ASSEMBLER SUBPROGRAM FOR CALCSHRS           *
           //* SYSLIB shows where IBM macros are found                         *
           //*                                                                 *
           //* SYSIN is the assembler program 'CALCSHRS'                       *
           //*                                                                 *
           //* SYSLIN creates a temp dataset called OBJMOD4                    *
           //*                                                                 *
           //* SYSUT1 scratchpad used by the assembler                         *
           //*                                                                 *
           //* SYSPRINT - Output of the registers for abend                    *
           //*******************************************************************
        70 //JSTEP07  EXEC PGM=ASMA90,PARM='ASA,LIST',COND=(0,LT)
           //*
        71 //SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
           //*
        72 //SYSIN    DD *
           //*
        73 //SYSLIN   DD DSN=&&OBJMOD4,SPACE=(3040,(40,40),,,ROUND),
           //            DISP=(MOD,PASS)
           //*
        74 //SYSPRINT DD SYSOUT=*
           //*
        75 //SYSUT1   DD SPACE=(16384,(120,120),,,ROUND)
           //*
           //*
           //*******************************************************************
           //* JSTEP08 WILL BE THE BINDER FOR THE CALCSHRS SUBPROGRAM          *
           //*                                                                 *
           //* SYSLIB indicates where the binder is stored                     *
           //*                                                                 *
           //* SYSLIN compiles OBJMOD4 from JSTEP07                            *
           //*                                                                 *
           //* SYSLMOD stores the program object into my personal load libary  *
           //*                                                                 *
           //* SYSPRINT - Output of the registers for abend                    *
           //*******************************************************************
        76 //JSTEP08  EXEC PGM=HEWL,COND=(0,LT)
           //*
        77 //SYSLIB   DD DSN=CEE.SCEELKED,DISP=SHR
           //*
        78 //SYSLIN   DD DSN=&&OBJMOD4,DISP=(OLD,DELETE)
           //*
        79 //SYSLMOD  DD DSN=KC03I4C.CSCI465.LOADLIB(CALCSHRS),
           //            SPACE=(1024,(50,20,1)),DSNTYPE=LIBRARY,
           //            DISP=(MOD,KEEP,KEEP)
           //*
        80 //SYSPRINT DD SYSOUT=*
           //*
           //*******************************************************************
           //* JSTEP09 - Fetches the program object/load module stored in my   *
           //* PDSE. Only works when less than 0, (no abends or errors)        *
           //*                                                                 *
           //* STEPLIN input will be used for accessing the data set from my   *
           //* loadlib                                                         *
           //*                                                                 *
           //* FUNDFLE - used with the sorted file from JSTEP01                *
           //*                                                                 *
           //* ORCHFLE - gets the data from Professor Decker's DATAFA20        *
           //*                                                                 *
           //* TRANFLE  - gets the data from Professor Decker's DATAFA20       *
           //*                                                                 *
           //* LEFILE saves space for the other report                         *
           //*                                                                 *
           //* RPTFILE output will print the data from                         *
           //* KC02322.CSCI465.DATAFA20(DATA5)                                 *
           //*                                                                 *
           //* SYSUDUMP output will provide a dump of registers and PSW        *
           //* incase of abend                                                 *
           //*******************************************************************
        81 //JSTEP09  EXEC PGM=ENDOWMT5,COND=(0,LT)
           //*
        82 //STEPLIB  DD DSN=KC03I4C.CSCI465.LOADLIB,DISP=SHR
           //*
        83 //FUNDFLE  DD DSN=&&SORTED,DISP=(OLD,DELETE,DELETE)
           //*
        84 //ORCHFLE  DD DSN=KC02322.CSCI465.DATAFA20(ORCHS),DISP=SHR
           //*
        85 //TRANFLE  DD DSN=KC02322.CSCI465.DATAFA20(DATA7),DISP=SHR
           //*
        86 //LEFILE   DD SPACE=(TRK,(5,10)),DISP=(MOD,DELETE,DELETE)
           //*
        87 //RPTFLE   DD SYSOUT=*
           //*
        88 //SYSUDUMP DD SYSOUT=*
 ICH70001I KC03I4C  LAST ACCESS AT 22:08:58 ON SUNDAY, DECEMBER 6, 2020
 IEFA111I KC03I4CA IS USING THE FOLLOWING JOB RELATED SETTINGS:
          SWA=ABOVE,TIOT SIZE=32K,DSENQSHR=DISALLOW,GDGBIAS=JOB
 IEF236I ALLOC. FOR KC03I4CA JSTEP01
 IGD103I SMS ALLOCATED TO DDNAME SORTIN
 IGD101I SMS ALLOCATED TO DDNAME (SORTOUT )
         DSN (SYS20341.T221402.RA000.KC03I4CA.SORTED.H01  )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO SYSOUT
 IEF237I JES2 ALLOCATED TO SYSIN
 IEF142I KC03I4CA JSTEP01 - STEP WAS EXECUTED - COND CODE 0000
 IGD104I KC02322.CSCI465.DATAFA20                     RETAINED,  DDNAME=SORTIN
 IGD106I SYS20341.T221402.RA000.KC03I4CA.SORTED.H01   PASSED,    DDNAME=SORTOUT
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000107.?         SYSOUT
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000101.?         SYSIN
 IEF373I STEP/JSTEP01 /START 2020341.2214
 IEF032I STEP/JSTEP01 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:  1068K  SYS:   256K  EXT:     6160K  SYS:    11600K
         ATB- REAL:                  1048K  SLOTS:                     0K
              VIRT- ALLOC:      11M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP02
 IGD103I SMS ALLOCATED TO DDNAME SYSLIB
 IEF237I JES2 ALLOCATED TO SYSIN
 IGD101I SMS ALLOCATED TO DDNAME (SYSLIN  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.OBJMOD1.H01 )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186308    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT2  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186309    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT3  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186310    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT4  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186311    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT5  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186312    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT6  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186313    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT7  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186314    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT8  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186315    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT9  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186316    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT10 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186317    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT11 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186318    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT12 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186319    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT13 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186320    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT14 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186321    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT15 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186322    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSMDECK)
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186323    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IEF142I KC03I4CA JSTEP02 - STEP WAS EXECUTED - COND CODE 0000
 IGD104I KC02322.CSCI465.COPYLIB                      RETAINED,  DDNAME=SYSLIB
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000102.?         SYSIN
 IGD106I SYS20341.T221402.RA000.KC03I4CA.OBJMOD1.H01  PASSED,    DDNAME=SYSLIN
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000108.?         SYSOUT
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186308     DELETED,   DDNAME=SYSUT1
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186309     DELETED,   DDNAME=SYSUT2
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186310     DELETED,   DDNAME=SYSUT3
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186311     DELETED,   DDNAME=SYSUT4
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186312     DELETED,   DDNAME=SYSUT5
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186313     DELETED,   DDNAME=SYSUT6
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186314     DELETED,   DDNAME=SYSUT7
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186315     DELETED,   DDNAME=SYSUT8
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186316     DELETED,   DDNAME=SYSUT9
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186317     DELETED,   DDNAME=SYSUT10
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186318     DELETED,   DDNAME=SYSUT11
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186319     DELETED,   DDNAME=SYSUT12
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186320     DELETED,   DDNAME=SYSUT13
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186321     DELETED,   DDNAME=SYSUT14
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186322     DELETED,   DDNAME=SYSUT15
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186323     DELETED,   DDNAME=SYSMDECK
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000109.?         SYSOUT
 IEF373I STEP/JSTEP02 /START 2020341.2214
 IEF032I STEP/JSTEP02 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.08 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   508K  SYS:  4268K  EXT:   135884K  SYS:    13872K
         ATB- REAL:                 10168K  SLOTS:                     0K
              VIRT- ALLOC:     529M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP03
 IGD103I SMS ALLOCATED TO DDNAME SYSLIB
 IEF237I JES2 ALLOCATED TO SYSIN
 IGD101I SMS ALLOCATED TO DDNAME (SYSLIN  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.OBJMOD2.H01 )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186324    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT2  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186325    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT3  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186326    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT4  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186327    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT5  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186328    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT6  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186329    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT7  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186330    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT8  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186331    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT9  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186332    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT10 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186333    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT11 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186334    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT12 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186335    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT13 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186336    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT14 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186337    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT15 )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186338    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSMDECK)
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186339    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IEF142I KC03I4CA JSTEP03 - STEP WAS EXECUTED - COND CODE 0000
 IGD104I KC02322.CSCI465.COPYLIB                      RETAINED,  DDNAME=SYSLIB
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000103.?         SYSIN
 IGD106I SYS20341.T221402.RA000.KC03I4CA.OBJMOD2.H01  PASSED,    DDNAME=SYSLIN
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000110.?         SYSOUT
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186324     DELETED,   DDNAME=SYSUT1
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186325     DELETED,   DDNAME=SYSUT2
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186326     DELETED,   DDNAME=SYSUT3
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186327     DELETED,   DDNAME=SYSUT4
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186328     DELETED,   DDNAME=SYSUT5
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186329     DELETED,   DDNAME=SYSUT6
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186330     DELETED,   DDNAME=SYSUT7
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186331     DELETED,   DDNAME=SYSUT8
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186332     DELETED,   DDNAME=SYSUT9
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186333     DELETED,   DDNAME=SYSUT10
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186334     DELETED,   DDNAME=SYSUT11
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186335     DELETED,   DDNAME=SYSUT12
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186336     DELETED,   DDNAME=SYSUT13
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186337     DELETED,   DDNAME=SYSUT14
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186338     DELETED,   DDNAME=SYSUT15
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186339     DELETED,   DDNAME=SYSMDECK
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000111.?         SYSOUT
 IEF373I STEP/JSTEP03 /START 2020341.2214
 IEF032I STEP/JSTEP03 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.04 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   508K  SYS:  4268K  EXT:   135884K  SYS:    13904K
         ATB- REAL:                  5696K  SLOTS:                     0K
              VIRT- ALLOC:     529M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP04
 IEF237I 1001 ALLOCATED TO SYSLIB
 IGD103I SMS ALLOCATED TO DDNAME SYSLIN
 IGD103I SMS ALLOCATED TO DDNAME
 IEF237I JES2 ALLOCATED TO
 IGD103I SMS ALLOCATED TO DDNAME SYSLMOD
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186340    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF142I KC03I4CA JSTEP04 - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   CEE.SCEELKED                                 KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IGD105I SYS20341.T221402.RA000.KC03I4CA.OBJMOD1.H01  DELETED,   DDNAME=SYSLIN
 IGD105I SYS20341.T221402.RA000.KC03I4CA.OBJMOD2.H01  DELETED,   DDNAME=
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000104.?         SYSIN
 IGD104I KC03I4C.CSCI465.LOADLIB                      RETAINED,  DDNAME=SYSLMOD
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000112.?         SYSOUT
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186340     DELETED,   DDNAME=SYSUT1
 IEF373I STEP/JSTEP04 /START 2020341.2214
 IEF032I STEP/JSTEP04 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.01 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:    88K  SYS:   264K  EXT:     1768K  SYS:    11952K
         ATB- REAL:                  1072K  SLOTS:                     0K
              VIRT- ALLOC:      15M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP05
 IEF237I 1001 ALLOCATED TO SYSLIB
 IEF237I JES2 ALLOCATED TO SYSIN
 IGD101I SMS ALLOCATED TO DDNAME (SYSLIN  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.OBJMOD3.H01 )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186341    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF142I KC03I4CA JSTEP05 - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   SYS1.MACLIB                                  KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000105.?         SYSIN
 IGD106I SYS20341.T221402.RA000.KC03I4CA.OBJMOD3.H01  PASSED,    DDNAME=SYSLIN
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186341     DELETED,   DDNAME=SYSUT1
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000113.?         SYSOUT
 IEF373I STEP/JSTEP05 /START 2020341.2214
 IEF032I STEP/JSTEP05 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.01 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   248K  SYS:   260K  EXT:    32768K  SYS:    12020K
         ATB- REAL:                  1096K  SLOTS:                     0K
              VIRT- ALLOC:      20M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP06
 IEF237I 1001 ALLOCATED TO SYSLIB
 IGD103I SMS ALLOCATED TO DDNAME SYSLIN
 IGD103I SMS ALLOCATED TO DDNAME SYSLMOD
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF142I KC03I4CA JSTEP06 - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   CEE.SCEELKED                                 KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IGD105I SYS20341.T221402.RA000.KC03I4CA.OBJMOD3.H01  DELETED,   DDNAME=SYSLIN
 IGD104I KC03I4C.CSCI465.LOADLIB                      RETAINED,  DDNAME=SYSLMOD
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000114.?         SYSOUT
 IEF373I STEP/JSTEP06 /START 2020341.2214
 IEF032I STEP/JSTEP06 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   144K  SYS:   260K  EXT:     1640K  SYS:    11912K
         ATB- REAL:                  1084K  SLOTS:                     0K
              VIRT- ALLOC:      17M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP07
 IEF237I 1001 ALLOCATED TO SYSLIB
 IEF237I JES2 ALLOCATED TO SYSIN
 IGD101I SMS ALLOCATED TO DDNAME (SYSLIN  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.OBJMOD4.H01 )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186342    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF142I KC03I4CA JSTEP07 - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   SYS1.MACLIB                                  KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000106.?         SYSIN
 IGD106I SYS20341.T221402.RA000.KC03I4CA.OBJMOD4.H01  PASSED,    DDNAME=SYSLIN
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000115.?         SYSOUT
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186342     DELETED,   DDNAME=SYSUT1
 IEF373I STEP/JSTEP07 /START 2020341.2214
 IEF032I STEP/JSTEP07 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   248K  SYS:   260K  EXT:    32768K  SYS:    12016K
         ATB- REAL:                  1096K  SLOTS:                     0K
              VIRT- ALLOC:      20M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP08
 IEF237I 1001 ALLOCATED TO SYSLIB
 IGD103I SMS ALLOCATED TO DDNAME SYSLIN
 IGD103I SMS ALLOCATED TO DDNAME SYSLMOD
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF142I KC03I4CA JSTEP08 - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   CEE.SCEELKED                                 KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IGD105I SYS20341.T221402.RA000.KC03I4CA.OBJMOD4.H01  DELETED,   DDNAME=SYSLIN
 IGD104I KC03I4C.CSCI465.LOADLIB                      RETAINED,  DDNAME=SYSLMOD
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000116.?         SYSOUT
 IEF373I STEP/JSTEP08 /START 2020341.2214
 IEF032I STEP/JSTEP08 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   144K  SYS:   260K  EXT:     1640K  SYS:    11912K
         ATB- REAL:                  1084K  SLOTS:                     0K
              VIRT- ALLOC:      17M SHRD:       0M
 IEF236I ALLOC. FOR KC03I4CA JSTEP09
 IGD103I SMS ALLOCATED TO DDNAME STEPLIB
 IGD103I SMS ALLOCATED TO DDNAME FUNDFLE
 IGD103I SMS ALLOCATED TO DDNAME ORCHFLE
 IGD103I SMS ALLOCATED TO DDNAME TRANFLE
 IGD101I SMS ALLOCATED TO DDNAME (LEFILE  )
         DSN (SYS20341.T221402.RA000.KC03I4CA.R0186343    )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IEF237I JES2 ALLOCATED TO RPTFLE
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IEF142I KC03I4CA JSTEP09 - STEP WAS EXECUTED - COND CODE 0000
 IGD104I KC03I4C.CSCI465.LOADLIB                      RETAINED,  DDNAME=STEPLIB
 IGD105I SYS20341.T221402.RA000.KC03I4CA.SORTED.H01   DELETED,   DDNAME=FUNDFLE
 IGD104I KC02322.CSCI465.DATAFA20                     RETAINED,  DDNAME=ORCHFLE
 IGD104I KC02322.CSCI465.DATAFA20                     RETAINED,  DDNAME=TRANFLE
 IGD105I SYS20341.T221402.RA000.KC03I4CA.R0186343     DELETED,   DDNAME=LEFILE
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000117.?         SYSOUT
 IEF285I   KC03I4C.KC03I4CA.JOB01389.D0000118.?         SYSOUT
 IEF373I STEP/JSTEP09 /START 2020341.2214
 IEF032I STEP/JSTEP09 /STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.01 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   468K  SYS:   272K  EXT:     2400K  SYS:    11924K
         ATB- REAL:                  1084K  SLOTS:                     0K
              VIRT- ALLOC:      17M SHRD:       0M
 IEF375I  JOB/KC03I4CA/START 2020341.2214
 IEF033I  JOB/KC03I4CA/STOP  2020341.2214
         CPU:     0 HR  00 MIN  00.15 SEC    SRB:     0 HR  00 MIN  00.00 SEC
1ICE201I B RECORD TYPE IS F - DATA STARTS IN POSITION 1
 ICE751I 0 C5-I58435 C6-BASE   C7-I58435 C8-I58435 E4-BASE   C9-BASE   E5-I58435 E7-I58377
 ICE143I 0 BLOCKSET     SORT  TECHNIQUE SELECTED
 ICE250I 0 VISIT http://www.ibm.com/storage/dfsort FOR DFSORT PAPERS, EXAMPLES AND MORE
 ICE000I 1 - CONTROL STATEMENTS FOR 5650-ZOS, Z/OS DFSORT V2R3  - 22:14 ON SUN DEC 06, 2020 -
0            SORT FIELDS=(1,3,ZD,A)
 ICE193I 0 ICEAM1 INVOCATION ENVIRONMENT IN EFFECT - ICEAM1 ENVIRONMENT SELECTED
 ICE252I 1 PARMLIB OPTIONS WERE MERGED WITH INSTALLATION MODULE DEFAULTS
 ICE088I 1 KC03I4CA.JSTEP01 .        , INPUT LRECL = 80, BLKSIZE = 800, TYPE = FB
 ICE093I 0 MAIN STORAGE = (MAX,6291456,6291456)
 ICE156I 0 MAIN STORAGE ABOVE 16MB = (6234096,6234096)
 ICE127I 0 OPTIONS: OVFLO=RC0 ,PAD=RC0 ,TRUNC=RC0 ,SPANINC=RC16,VLSCMP=N,SZERO=Y,RESET=Y,VSAMEMT=Y,DYNSPC=256
 ICE128I 0 OPTIONS: SIZE=6291456,MAXLIM=1048576,MINLIM=450560,EQUALS=N,LIST=Y,ERET=RC16 ,MSGDDN=SYSOUT
 ICE129I 0 OPTIONS: VIO=N,RESDNT=ALL ,SMF=NO   ,WRKSEC=Y,OUTSEC=Y,VERIFY=Y,CHALT=N,DYNALOC=N             ,ABCODE=MSG
 ICE130I 0 OPTIONS: RESALL=4096,RESINV=0,SVC=109 ,CHECK=Y,WRKREL=Y,OUTREL=Y,CKPT=N,COBEXIT=COB2
 ICE131I 0 OPTIONS: TMAXLIM=6291456,ARESALL=0,ARESINV=0,OVERRGN=65536,CINV=Y,CFW=Y,DSA=0
 ICE132I 0 OPTIONS: VLSHRT=N,ZDPRINT=Y,IEXIT=N,TEXIT=N,LISTX=N,EFS=NONE    ,EXITCK=S,PARMDDN=DFSPARM ,FSZEST=N
 ICE133I 0 OPTIONS: HIPRMAX=OPTIMAL,DSPSIZE=MAX ,ODMAXBF=0,SOLRF=Y,VLLONG=N,VSAMIO=N,MOSIZE=MAX
 ICE235I 0 OPTIONS: NULLOUT=RC0
 ICE236I 0 OPTIONS: DYNAPCT=10 ,MOWRK=Y,TUNE=STOR,EXPMAX=MAX    ,EXPOLD=50%    ,EXPRES=10%
 ICE084I 0 EXCP ACCESS METHOD USED FOR SORTOUT
 ICE084I 0 EXCP ACCESS METHOD USED FOR SORTIN
 ICE750I 0 DC 925600 TC 0 CS DSVVV KSZ 2 VSZ 2
 ICE752I 0 FSZ=11570 RC  IGN=0 E  AVG=84 0  WSP=1263 C  DYN=0 0
 ICE751I 1 DE-I58435 D5-I58435 D9-I58435 E8-I58435
 ICE090I 0 OUTPUT LRECL = 80, BLKSIZE = 27920, TYPE = FB   (SDB)
 ICE080I 0 IN MAIN STORAGE SORT
 ICE055I 0 INSERT 0, DELETE 0
 ICE054I 0 RECORDS - IN: 31, OUT: 31
 ICE134I 0 NUMBER OF BYTES SORTED: 2480
 ICE253I 0 RECORDS SORTED - PROCESSED: 31, EXPECTED: 11570
 ICE199I 0 MEMORY OBJECT USED AS MAIN STORAGE = 0M BYTES
 ICE299I 0 MEMORY OBJECT USED AS WORK STORAGE = 0M BYTES
 ICE180I 0 HIPERSPACE STORAGE USED = 0K BYTES
 ICE188I 0 DATA SPACE STORAGE USED = 0K BYTES
 ICE052I 0 END OF DFSORT
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107                 Date 12/06/2020  Time 22:14:08   Page     1
0Invocation parameters:
  APOST
0Options in effect:
  NOADATA
    ADV
    AFP(NOVOLATILE)
    APOST
    ARCH(7)
    ARITH(COMPAT)
  NOAWO
  NOBLOCK0
    BUFSIZE(4096)
  NOCICS
    CODEPAGE(1140)
  NOCOMPILE(S)
  NOCOPYLOC
  NOCOPYRIGHT
  NOCURRENCY
    DATA(31)
    DBCS
  NODECK
  NODEFINE
  NODIAGTRUNC
    DISPSIGN(COMPAT)
  NODLL
  NODUMP
  NODYNAM
  NOEXIT
  NOEXPORTALL
  NOFASTSRT
    FLAG(I,I)
  NOFLAGSTD
    HGPR(PRESERVE)
  NOINITCHECK
    INLINE
    INTDATE(ANSI)
    LANGUAGE(EN)
    LINECOUNT(60)
  NOLIST
  NOMAP
    MAXPCF(100000)
  NOMDECK
  NONAME
    NSYMBOL(NATIONAL)
  NONUMBER
  NONUMCHECK
    NUMPROC(NOPFD)
    OBJECT
  NOOFFSET
    OPTIMIZE(0)
    OUTDD(SYSOUT)
  NOPARMCHECK
    PGMNAME(COMPAT)
    QUALIFY(COMPAT)
    RENT
    RMODE(AUTO)
  NORULES
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107                 Date 12/06/2020  Time 22:14:08   Page     2
0 NOSERVICE
    SEQUENCE
    SOURCE
    SPACE(1)
  NOSQL
    SQLCCSID
  NOSQLIMS
  NOSSRANGE
  NOSTGOPT
    SUPPRESS
  NOTERM
  NOTEST(NODWARF,NOSOURCE,NOSEPARATE)
  NOTHREAD
    TRUNC(STD)
  NOVBREF
    VLR(STANDARD)
    VSAMOPENFS(COMPAT)
  NOWORD
    XMLPARSE(XMLSS)
    XREF(FULL)
    ZONEDATA(PFD)
    ZWB
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page     3
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000001               ****************************************************************
   000002               *                                                              *
   000003               * PROGRAM NAME:  ENDOWMT5                                      *
   000004               *                                                              *
   000005               * FUNCTION:  THIS PROGRAM READS INPUT DATA TABLES AND THEN     *
   000006               *            WRITES THEM TO STANDARD OUTPUT. PROGRAM TAKES IN  *
   000007               *            INPUT AND CALCULATES AVERAGES AND DEPOSITS/WITH   *
   000008               *            FOR DIFFERENT ACCOUNTS                            *
   000009               *                                                              *
   000010               * INPUT:     ININST - THE INPUT DATA RECORDS READ IN FOR RPT 1 *
   000011               *            LOW-ENDOWMT-FILE - FOR RPT 2                      *
   000012               *                                                              *
   000013               * OUTPUT:    REPORT - THE INPUT DATA RECORDS WRITTEN OUT.      *
   000014               *                                                              *
   000015               ****************************************************************
   000016
   000017                IDENTIFICATION DIVISION.
   000018
   000019                PROGRAM-ID.    ENDOWMT5.
   000020                AUTHOR.        CHARLES ALMS.
   000021                DATE-WRITTEN.  11/20/2020.
   000022                DATE-COMPILED. 12/06/20.
   000023
   000024                ENVIRONMENT DIVISION.
   000025
   000026                INPUT-OUTPUT SECTION.
   000027               ***************************************************************
   000028                FILE-CONTROL.
   000029                    SELECT TRAN-FILE ASSIGN TO TRANFLE.                                   37
   000030                    SELECT LOW-ENDOWMT-FILE ASSIGN TO LEFILE.                             48
   000031                    SELECT REPORT-FILE ASSIGN TO RPTFLE.                                  59
   000032
   000033                DATA DIVISION.
   000034
   000035                FILE SECTION.
   000036
   000037                FD  TRAN-FILE
   000038                    RECORDING MODE F.
   000039
   000040                COPY TRANREC.
   000041C               01  TRAN-RECORD.                                                 00010000
   000042C                   05  IN-ORCH-NME           PIC X(45).                         00020000
   000043C                   05  IN-TRAN-TYPE          PIC X.                             00030000
   000044C                   05  IN-ENDOWMT-CHG-AMT    PIC S9(9)V99.                      00040000
   000045                    05  FILLER                  PIC X(23).
   000046
   000047               ******************************
   000048                FD  LOW-ENDOWMT-FILE
   000049                    RECORDING MODE F.
   000050
   000051                COPY LEREC.
   000052C               01  LOW-ENDOWMT-RECORD.                                          00010000
   000053C                   05  LE-ORCH-NME           PIC X(45).                         00020000
   000054C                   05  LE-FUND-NBR           PIC S9(3)     PACKED-DECIMAL.      00030000
   000055C                   05  LE-ENDOWMT-AMT        PIC S9(9)V99  PACKED-DECIMAL.      00040000
   000056                    05  FILLER                  PIC X(21).
   000057
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page     4
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000058               ******************************
   000059                FD  REPORT-FILE
   000060                    RECORDING MODE F.
   000061
   000062                01  REPORT-RECORD               PIC X(132).
   000063               ***************************************************************
   000064                WORKING-STORAGE SECTION.
   000065
   000066                COPY ORCHTBL.
   000067C               01  ORCHS-TBL.
   000068C                   05  TBL-ORCH-NTRY              OCCURS 100
   000069C                                                  INDEXED BY ORCH-NDX.
   000070C                       10  TBL-ORCH-NME           PIC X(45).
   000071C                       10  TBL-INV-FUND-NBR       PIC S9(3)    PACKED-DECIMAL.
   000072C                       10  TBL-ENDOWMT-AMT        PIC S9(9)V99 PACKED-DECIMAL.
   000073C                       10  TBL-ENDOWMT-USUF-LMT   PIC S9(9)V99 PACKED-DECIMAL.
   000074C                       10  TBL-CAP-GAINS-PCT-FLG  PIC S9       PACKED-DECIMAL.
   000075
   000076               ***************************************************************
   000077               * THIS WILL DECALRE THE FUND TABLE AND IN ASCENDING ORDER     *
   000078               * BASED ON THE FUND-NBR. COPPIES REST FROM DECKER'S COPLIB    *
   000079               ***************************************************************
   000080                01  FUND-TBL.
   000081                    05  TBL-FUND-CTR            PIC S9(3) BINARY SYNC VALUE 0.
   000082                    05  TBL-FUND-NTRY           OCCURS 1 TO 100
   000083                                                DEPENDING ON TBL-FUND-CTR                 81
   000084                                                ASCENDING KEY TBL-FUND-NBR                87
   000085                                                INDEXED BY FUND-NDX.
   000086                COPY FUNDSTBL.
   000087C                       10  TBL-FUND-NBR           PIC S9(3)    BINARY SYNC.
   000088C                       10  TBL-FUND-NME           PIC X(25).
   000089C                       10  TBL-FUND-SHR-PRC       PIC S9(3)V99 PACKED-DECIMAL.
   000090C                       10  TBL-FUND-CAP-GAINS-PCT OCCURS 4
   000091C                                                  PIC S9(3)V999 PACKED-DECIMAL.
   000092
   000093                01  EOF-FLAG                    PIC X VALUE 'N'.
   000094
   000095               ***************************************************************
   000096               * VARIABLE STORAGE                                            *
   000097               ***************************************************************
   000098                01  VARIABLES.
   000099                    05  LINE-CTR                PIC S9(2) BINARY SYNC VALUE 99.
   000100                    05  PAGE-CTR                PIC S9(3) PACKED-DECIMAL
   000101                                                          VALUE 0.
   000102                    05  TRAN-CTR                PIC S9(3) PACKED-DECIMAL
   000103                                                          VALUE 0.
   000104                    05  ORCH-CTR                PIC S9(3) PACKED-DECIMAL
   000105                                                          VALUE 0.
   000106                    05  NEW-END-AMT             PIC S9(11)V99 PACKED-DECIMAL
   000107                                                VALUE 0.
   000108                    05  NEG-END-AMT             PIC S9(11)V99 PACKED-DECIMAL
   000109                                                VALUE 0.
   000110                    05  NEG-SHR-AMT             PIC S9(11)V99 PACKED-DECIMAL
   000111                                                VALUE 0.
   000112                    05  FLAG-VAL                PIC S9 BINARY SYNC.
   000113
   000114               ***************************************************************
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page     5
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000115               * SHARE AMOUNT VARIABLES                                      *
   000116               ***************************************************************
   000117                01  SHAR-VALS.
   000118                    05  ENDOWMT-SHR-STRT        PIC S9(11)V9(3) PACKED-DECIMAL
   000119                                                VALUE  0.
   000120                    05  ENDOWMT-SHR-CHG         PIC S9(11)V9(3) PACKED-DECIMAL
   000121                                                VALUE  0.
   000122                    05  ENDOWMT-SHR-NEW         PIC S9(11)V9(3) PACKED-DECIMAL
   000123                                                VALUE  0.
   000124
   000125               ***************************************************************
   000126               * TOTAL STORAGE                                               *
   000127               ***************************************************************
   000128                01  STORAGE-TOTAL.
   000129                    05  TOT-ENDOWMT-AMT         PIC S9(11)V99   PACKED-DECIMAL
   000130                                                VALUE  0.
   000131                    05  TOT-ENDOWMT-CHG-AMT     PIC S9(11)V99   PACKED-DECIMAL
   000132                                                VALUE  0.
   000133                    05  TOT-NEW-ENDOWMT-AMT     PIC S9(11)V99   PACKED-DECIMAL
   000134                                                VALUE  0.
   000135                    05  TOT-SHR-STR             PIC S9(13)V9(3) PACKED-DECIMAL
   000136                                                VALUE  0.
   000137                    05  TOT-SHR-CHG             PIC S9(13)V9(3) PACKED-DECIMAL
   000138                                                VALUE  0.
   000139                    05  TOT-SHR-NEW             PIC S9(13)V9(3) PACKED-DECIMAL
   000140                                                VALUE  0.
   000141
   000142               ***************************************************************
   000143               * STORAGE FOR THE FLAG VALUES                                 *
   000144               ***************************************************************
   000145                01  STORAGE-FLG-VAL.
   000146                    05  DEP                     PIC X(12) VALUE
   000147                            'DEPOSIT     '.
   000148                    05  WITHD                   PIC X(12) VALUE
   000149                            'WITHDRAWAL  '.
   000150                    05  REINV                   PIC X(12) VALUE
   000151                            'REINVESTMENT'.
   000152                    05  EXCOUT                  PIC X(12) VALUE
   000153                            'EXCHANGE OUT'.
   000154                    05  TRANOUT                 PIC X(12) VALUE
   000155                            'TRANSFER OUT'.
   000156
   000157               ***************************************************************
   000158               * STORAGE FOR THE ERRORS THAT CAN HAPPEN                      *
   000159               ***************************************************************
   000160                01  STORAGE-ERR.
   000161                    05  DEP-ERR                 PIC X(26) VALUE
   000162                            'DEPOSIT NOT PROCESSED     '.
   000163                    05  WITH-ERR                PIC X(26) VALUE
   000164                            'WITHDRAWAL NOT PROCESSED  '.
   000165                    05  EXCH-ERR                PIC X(26) VALUE
   000166                            'EXCHANGE OUT NOT PROCESSED'.
   000167                    05  TRAN-ERR                PIC X(26) VALUE
   000168                            'TRANSFER OUT NOT PROCESSED'.
   000169                    05  REINV-ERR               PIC X(26) VALUE
   000170                            'REINVESTMENT NOT PROCESSED'.
   000171                    05  ORCH-ERR                PIC X(18) VALUE
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page     6
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000172                            'UNKNOWN ORCHESTRA'.
   000173
   000174               ***************************************************************
   000175               * STORAGE FOR BAD TRANS                                       *
   000176               ***************************************************************
   000177                01  STORAGE-TRAN-ERRS.
   000178
   000179                    05  ZERO-ERR                PIC X(8)  VALUE
   000180                            '(0.0000)'.
   000181                    05  ZERO-DOL-ERR            PIC X(7)  VALUE
   000182                            '($0.00)'.
   000183                    05  ZERO-DOL-ERR2           PIC X(5)  VALUE
   000184                            '$0.00'.
   000185                    05  PAR-OPEN                PIC X(1)  VALUE '('.
   000186                    05  PAR-CLOSE               PIC X(1)  VALUE ')'.
   000187
   000188               ***************************************************************
   000189               * FUND NUM NOT FOUND ERROR LINE 1                             *
   000190               ***************************************************************
   000191                01  FUND-ERR-LN1.
   000192                    05  OUT-ORCH-NME3         PIC X(45).
   000193                    05  FILLER                PIC X(87) VALUE SPACES.                     IMP
   000194
   000195               ***************************************************************
   000196               * FUND NUM NOT FOUND ERROR LINE 2                             *
   000197               ***************************************************************
   000198                01  FUND-ERR-LN2.
   000199                    05  FUND-ERR                PIC X(30) VALUE
   000200                            '*** FUND NUMBER NOT FOUND ***'.
   000201                    05  FILLER                  PIC X(24) VALUE SPACES.                   IMP
   000202                    05  OUT-FUND-END-AMT        PIC $$$$,$$$,$$9.99.
   000203                    05  FILLER                  PIC X(2) VALUE SPACES.                    IMP
   000204                    05  OUT-FUND-TRAN-ERR       PIC X(26).
   000205                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000206                    05  OPEN-PER                PIC X(1).
   000207                    05  OUT-DOL-AMT             PIC X(5).
   000208                    05  CLOSE-PER               PIC X(1).
   000209                    05  FILLER                  PIC X(10) VALUE SPACES.                   IMP
   000210                    05  OUT-FUND-ERR-NEW        PIC $$$$,$$$,$$9.99.
   000211
   000212               ***************************************************************
   000213               * TRAN ERROR                                                  *
   000214               ***************************************************************
   000215                01  ERR-TRAN-LN.
   000216                    05  OUT-ORCH-NME2           PIC X(45).
   000217                    05  FILLER                  PIC X(7) VALUE SPACES.                    IMP
   000218                    05  FILLER              PIC X(17) VALUE
   000219                            'UNKNOWN ORCHESTRA'.
   000220                    05  FILLER              PIC X(2)  VALUE SPACES.                       IMP
   000221                    05  OUT-TRAN-ERR-MSG    PIC X(26).
   000222                    05  FILLER              PIC X(36) VALUE SPACES.                       IMP
   000223
   000224               ***************************************************************
   000225               * HEADER 1 WILL HAVE THE DATE, PAGE COUNTER, REPORT NAME SS   *
   000226               ***************************************************************
   000227                01  HEADER1.
   000228                    05  OUT-CURRENT-DATE.
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page     7
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000229                        10  CURRENT-MONTH              PIC 99.
   000230                        10  FILLER                     PIC X VALUE '/'.
   000231                        10  CURRENT-DAY                PIC 99.
   000232                        10  FILLER                     PIC X VALUE '/'.
   000233                        10  CURRENT-YEAR               PIC 9(4).
   000234                    05  FILLER                         PIC X(39) VALUE SPACES.            IMP
   000235                    05  FILLER                         PIC X(36) VALUE
   000236                        'ORCHESTRAL INVESTMENTS COMPANY, INC.'.
   000237                    05  FILLER                         PIC X(39) VALUE SPACES.            IMP
   000238                    05  PAGE-HEADER                    PIC X(5) VALUE 'PAGE:'.
   000239                    05  FILLER                         PIC X(1) VALUE SPACES.             IMP
   000240                    05  OUT-PAGE-CTR                   PIC Z9.
   000241
   000242
   000243               ***************************************************************
   000244               * HEADER 2 WILL HAVE THE TIME AND REPORT NAME     DS          *
   000245               ***************************************************************
   000246                01  HEADER2.
   000247                    05  OUT-CURRENT-TIMES.
   000248                        10  CURRENT-HOUR               PIC 99.
   000249                        10  FILLER                     PIC X(1) VALUE ':'.
   000250                        10  CURRENT-MINUTE             PIC 99.
   000251                    05  FILLER                         PIC X(46) VALUE SPACES.            IMP
   000252                    05  MEFC-HEAD                      PIC X(31) VALUE
   000253                          'MONTHLY INVESTMENT TRANSACTIONS'.
   000254                    05  FILLER                         PIC X(50) VALUE SPACES.            IMP
   000255
   000256               ***************************************************************
   000257               * HEADER3 WILL HAVE THE FIRST COULMN NAMES                    *
   000258               ***************************************************************
   000259                01  HEADER3.
   000260                    05  FILLER                  PIC X(54) VALUE SPACES.                   IMP
   000261                    05  FILLER                  PIC X(18) VALUE
   000262                          'ENDOWMENT SHARE   '.
   000263                    05  FILLER                  PIC X(18) VALUE
   000264                          'TRANSACTION       '.
   000265                    05  FILLER                  PIC X(23) VALUE
   000266                          'TRANSACTION CHANGE     '.
   000267                    05  FILLER                  PIC X(19) VALUE
   000268                          'NEW ENDOWMENT SHARE'.
   000269
   000270               ***************************************************************
   000271               * HEADER4 WILL HAVE THE NEXT SET OF COULMN NAMES              *
   000272               ***************************************************************
   000273                01  HEADER4.
   000274                    05  FILLER                  PIC X(53) VALUE
   000275                      'ORCHESTRA NAME                                      '.
   000276                    05  FILLER                  PIC X(26) VALUE
   000277                        'AMOUNT AND VALUE         '.
   000278                    05  FILLER                  PIC X(7) VALUE
   000279                        'TYPE  '.
   000280                    05  FILLER                  PIC X(30) VALUE
   000281                        'SHARE AMOUNT AND VALUE       '.
   000282                    05  FILLER                  PIC X(17) VALUE
   000283                        'AMOUNT AND VALUE'.
   000284
   000285               ***************************************************************
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page     8
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000286               * HEADER5 WILL BE THE HYPHENS                                 *
   000287               ***************************************************************
   000288                01  HEADER5.
   000289                    05  FILLER                  PIC X(47) VALUE ALL '-'.
   000290                    05  FILLER                  PIC X(3)  VALUE SPACES.                   IMP
   000291                    05  FILLER                  PIC X(19) VALUE ALL '-'.
   000292                    05  FILLER                  PIC X(2)  VALUE SPACES.                   IMP
   000293                    05  FILLER                  PIC X(12) VALUE ALL '-'.
   000294                    05  FILLER                  PIC X(3)  VALUE SPACES.                   IMP
   000295                    05  FILLER                  PIC X(22) VALUE ALL '-'.
   000296                    05  FILLER                  PIC X(5)  VALUE SPACES.                   IMP
   000297                    05  FILLER                  PIC X(20) VALUE ALL '-'.
   000298
   000299               ***************************************************************
   000300               * RPTLN-1 WILL BE THE FIRST LINE OF REPORT 1                  *
   000301               ***************************************************************
   000302                01  RPTLN-1.
   000303                    05  OUT-ORCH-NME            PIC X(45).
   000304                    05  FILLER                  PIC X(5) VALUE SPACES.                    IMP
   000305                    05  OUT-END-SHR-AMT         PIC ZZ,ZZZ,ZZZ,ZZ9.9999.
   000306                    05  FILLER                  PIC X(2) VALUE SPACES.                    IMP
   000307                    05  PROCESS.
   000308                        10  OUT-TRAN-TYPE           PIC X(13).
   000309                        10  FILLER                  PIC X(3) VALUE SPACES.                IMP
   000310                        10  OUT-PAR                 PIC X(1).
   000311                        10  OUT-CHG-SHR-AMT         PIC ZZ,ZZZ,ZZZ,ZZ9.9999.
   000312                        10  OUT-PAR-CLOSE           PIC X(1).
   000313                    05  NO-PROCESS REDEFINES PROCESS.                                     307
   000314                        10  OUT-TRAN-ERR            PIC X(26).
   000315                        10  FILLER                  PIC X(3).
   000316                        10  OUT-ZERO-ERR            PIC X(8).
   000317                    05  NO-PROCESS-SPACES REDEFINES PROCESS                               307
   000318                                                    PIC X(37).
   000319                    05  FILLER                  PIC X(5)  VALUE SPACES.                   IMP
   000320                    05  OUT-NEW-SHR-AMT         PIC ZZ,ZZZ,ZZZ,ZZ9.9999.
   000321
   000322               ***************************************************************
   000323               * RPTLN-2 WILL BE THE SECOND LINE OF REPORT 1                 *
   000324               ***************************************************************
   000325                01  RPTLN-2.
   000326                    05  FILLER                  PIC X(19) VALUE
   000327                        'FUND NUMBER/NAME: '.
   000328                    05  OUT-FUND-NUM            PIC ZZ9.
   000329                    05  FILLER                  PIC X VALUE '/'.
   000330                    05  OUT-FUND-NME            PIC X(25).
   000331                    05  FILLER                  PIC X(6) VALUE SPACES.                    IMP
   000332                    05  OUT-END-AMT             PIC $$$$,$$$,$$9.99.
   000333                    05  PROCESS2.
   000334                        10  FILLER                  PIC X(22) VALUE SPACES.               IMP
   000335                        10  OUT-PAR2                PIC X(1).
   000336                        10  OUT-END-CHG-AMT         PIC $$$$,$$$,$$9.99.
   000337                        10  OUT-PAR-CLOSE2          PIC X(1).
   000338                    05  NO-PROCESS2 REDEFINES PROCESS2.                                   333
   000339                        10  FILLER                  PIC X(32).
   000340                        10  OUT-ZERO-DOL-ERR        PIC X(7).
   000341                    05  NO-PROCESS-SPACES2 REDEFINES PROCESS2                             333
   000342                                                    PIC X(39).
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page     9
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000343                    05  FILLER                  PIC X(9) VALUE SPACES.                    IMP
   000344                    05  OUT-NEW-END-AMT         PIC $$$$,$$$,$$9.99.
   000345
   000346               ***************************************************************
   000347               * FOOTER FOR THE HYPHENS ON REPORT 1                          *
   000348               ***************************************************************
   000349                01  FOOTER1.
   000350                    05  FILLER                  PIC X(47) VALUE SPACES.                   IMP
   000351                    05  FILLER                  PIC X(22) VALUE ALL '-'.
   000352                    05  FILLER                  PIC X(15) VALUE SPACES.                   IMP
   000353                    05  FILLER                  PIC X(24) VALUE ALL '-'.
   000354                    05  FILLER                  PIC X(2)  VALUE SPACES.                   IMP
   000355                    05  FILLER                  PIC X(23) VALUE ALL '-'.
   000356
   000357               ***************************************************************
   000358               * TOT-LINE WILL BE FOR THE SHARE TOTALS AT THE END            *
   000359               ***************************************************************
   000360                01  TOT-LN1.
   000361                    05  FILLER                  PIC X(14) VALUE
   000362                        'TRANSACTIONS: '.
   000363                    05  OUT-TRAN-CTR            PIC ZZ9.
   000364                    05  FILLER                  PIC X(15) VALUE SPACES.                   IMP
   000365                    05  FILLER                  PIC X(15) VALUE
   000366                        'SHARE TOTALS:  '.
   000367                    05  OUT-TOT-SHR-STR         PIC Z,ZZZ,ZZZ,ZZZ,ZZ9.9999.
   000368                    05  FILLER                  PIC X(17) VALUE SPACES.                   IMP
   000369                    05  OUT-TOT-SHR-CHG         PIC Z,ZZZ,ZZZ,ZZZ,ZZ9.9999.
   000370                    05  FILLER                  PIC X(2) VALUE SPACES.                    IMP
   000371                    05  OUT-TOT-SHR-NEW         PIC Z,ZZZ,ZZZ,ZZZ,ZZ9.9999.
   000372
   000373               ***************************************************************
   000374               * TOT-LN2 WILL HAVE THE END TOTALS                            *
   000375               ***************************************************************
   000376                01  TOT-LN2.
   000377                    05  FILLER                  PIC X(31) VALUE SPACES.                   IMP
   000378                    05  FILLER                  PIC X(20) VALUE
   000379                        'DOLLAR TOTALS:      '.
   000380                    05  OUT-TOT-END-STR         PIC $$$,$$$,$$$,$$9.99.
   000381                    05  FILLER                  PIC X(21) VALUE SPACES.                   IMP
   000382                    05  OUT-TOT-END-CHG         PIC $$$,$$$,$$$,$$9.99.
   000383                    05  FILLER                  PIC X(6) VALUE SPACES.                    IMP
   000384                    05  OUT-TOT-END-NEW         PIC $$$,$$$,$$$,$$9.99.
   000385
   000386
   000387
   000388
   000389
   000390
   000391               ***************************************************************
   000392               *                                                             *
   000393               * BELOW WILL BE ALL PRINT LINES FOR THE SECOND REPORT         *
   000394               *                                                             *
   000395               ***************************************************************
   000396
   000397               ***************************************************************
   000398               * HEADER 6 WILL BE FOR THE DATE AND TIME FOR THE SECOND REPORT*
   000399               ***************************************************************
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    10
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000400                01  HEADER6.
   000401                    05  OUT-CURRENT-TIMES2.
   000402                        10  CURRENT-HOUR               PIC 99.
   000403                        10  FILLER                     PIC X(1) VALUE ':'.
   000404                        10  CURRENT-MINUTE             PIC 99.
   000405                    05  FILLER                         PIC X(51) VALUE SPACES.            IMP
   000406                    05  MEFC-HEAD                      PIC X(23) VALUE
   000407                          'LOW INVESTMENT REPORT'.
   000408                    05  FILLER                         PIC X(53) VALUE SPACES.            IMP
   000409
   000410               ***************************************************************
   000411               * HEADER 7 WILL BE FOR THE COLUMN NAMES FOR REPORT 2          *
   000412               ***************************************************************
   000413                01  HEADER7.
   000414                    05  FILLER                  PIC X(14) VALUE
   000415                        'ORCHESTRA NAME'.
   000416                    05  FILLER                  PIC X(35) VALUE SPACES.                   IMP
   000417                    05  FILLER                  PIC X(11) VALUE
   000418                        'FUND NUMBER'.
   000419                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000420                    05  FILLER                  PIC X(9)  VALUE
   000421                        'FUND NAME'.
   000422                    05  FILLER                  PIC X(20) VALUE SPACES.                   IMP
   000423                    05  FILLER                  PIC X(20) VALUE
   000424                        'CURRENT SHARE AMOUNT'.
   000425                    05  FILLER                  PIC X(6)  VALUE SPACES.                   IMP
   000426                    05  FILLER                  PIC X(13) VALUE
   000427                        'CURRENT VALUE'.
   000428
   000429               ***************************************************************
   000430               * HEADER 8 WILL BE HYPHENS FOR REPORT 2                       *
   000431               ***************************************************************
   000432                01  HEADER8.
   000433                    05  FILLER                  PIC X(45) VALUE ALL '-'.
   000434                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000435                    05  FILLER                  PIC X(11) VALUE ALL '-'.
   000436                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000437                    05  FILLER                  PIC X(25) VALUE ALL '-'.
   000438                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000439                    05  FILLER                  PIC X(20) VALUE ALL '-'.
   000440                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000441                    05  FILLER                  PIC X(15) VALUE ALL '-'.
   000442
   000443               ***************************************************************
   000444               * RPT-LN3 WILL BE FOR THE SECOND REPORT                       *
   000445               ***************************************************************
   000446                01  RPT-LN3.
   000447                    05  OUT-LE-ORCH-NME         PIC X(45).
   000448                    05  FILLER                  PIC X(12) VALUE SPACES.                   IMP
   000449                    05  OUT-LE-FUND-NUM         PIC ZZ9.
   000450                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000451                    05  OUT-LE-INST-NME         PIC X(25).
   000452                    05  FILLER                  PIC X(5)  VALUE SPACES.                   IMP
   000453                    05  OUT-LE-SHR-AMT          PIC ZZ,ZZZ,ZZZ,ZZ9.9999.
   000454                    05  FILLER                  PIC X(4)  VALUE SPACES.                   IMP
   000455                    05  OUT-LE-END-AMT          PIC $$$$,$$$,$$9.99.
   000456
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    11
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000457               ***************************************************************
   000458               * DATE FUNCTION FROM THE NOTES                                *
   000459               ***************************************************************
   000460                01  CURRENT-DATE-FIELDS.
   000461                    05  CURRENT-DATE.
   000462                        10  CURRENT-YEAR                   PIC 9(4).
   000463                        10  CURRENT-MONTH                  PIC 9(2).
   000464                        10  CURRENT-DAY                    PIC 9(2).
   000465                    05  CURRENT-TIME.
   000466                        10  CURRENT-HOUR                   PIC 9(2).
   000467                        10  CURRENT-MINUTE                 PIC 9(2).
   000468                        10  CURRENT-SECOND                 PIC 9(2).
   000469                        10  CURRENT-MS                     PIC 9(2).
   000470                    05  DIFF-FROM-GMT                      PIC S9(4).
   000471
   000472
   000473               ***************************************************************
   000474               * STUFF FOR THE SUB PROGRAMS                                  *
   000475               ***************************************************************
   000476                01  ORCHSUB                 PIC X(8) VALUE 'BLDORCH'.
   000477                01  CACLSUB                 PIC X(8) VALUE 'CALCSHRS'.
   000478
   000479               ***************************************************************
   000480               * VARIABLES FOR CALLING CALCSHRS                              *
   000481               ***************************************************************
   000482                01 CALCSHR-VARS.
   000483                   05  STARTING             PIC S9(9)V99 PACKED-DECIMAL
   000484                                            VALUE 0.
   000485                   05  PRICE                PIC S9(3)V99 PACKED-DECIMAL
   000486                                            VALUE 0.
   000487
   000488                PROCEDURE DIVISION.
   000489
   000490                0000-MAIN.
   000491
   000492                    PERFORM 0100-DATE-AND-TIME.                                           546
   000493
   000494                    OPEN INPUT  TRAN-FILE                                                 37
   000495                         OUTPUT LOW-ENDOWMT-FILE                                          48
   000496                         OUTPUT REPORT-FILE.                                              59
   000497
   000498                    CALL ORCHSUB USING ORCHS-TBL                                          476 67
   000499                                       ORCH-CTR.                                          104
   000500
   000501                    MOVE 'N' TO EOF-FLAG.                                                 93
   000502
   000503                    CALL 'BLDFUND' USING FUND-TBL.                                        EXT 80
   000504
   000505                    MOVE 'N' TO EOF-FLAG.                                                 93
   000506
   000507                    READ TRAN-FILE                                                        37
   000508      1               AT END MOVE 'Y' TO EOF-FLAG                                         93
   000509                    END-READ.
   000510
   000511                      PERFORM 0400-PROCESS-TRAN                                           704
   000512                        UNTIL EOF-FLAG = 'Y'.                                             93
   000513
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    12
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000514                    PERFORM 0800-PROCESS-TOTALS.                                          1180
   000515
   000516                    CLOSE TRAN-FILE                                                       37
   000517                          LOW-ENDOWMT-FILE.                                               48
   000518
   000519               ***************************************************************
   000520               * FOR RUNNING THE LE FILE                                     *
   000521               ***************************************************************
   000522                    PERFORM 0900-PROCESS-RESET.                                           1200
   000523
   000524                    OPEN INPUT LOW-ENDOWMT-FILE.                                          48
   000525
   000526                    READ LOW-ENDOWMT-FILE                                                 48
   000527      1               AT END MOVE 'Y' TO EOF-FLAG                                         93
   000528                    END-READ.
   000529
   000530                    PERFORM 0710-PROCESS-PRINT-LE                                         1129
   000531                       UNTIL EOF-FLAG = 'Y'                                               93
   000532
   000533                    CLOSE LOW-ENDOWMT-FILE                                                48
   000534                          REPORT-FILE.                                                    59
   000535
   000536                    MOVE 0 TO RETURN-CODE.                                                IMP IMP
   000537
   000538                    GOBACK.
   000539
   000540                0000-EXIT. EXIT.
   000541
   000542               ***************************************************************
   000543               * SUB. FOR THE DATE                                           *
   000544               * MOVES THE DATE TO HEADER 1 AND TIME TO HEADER 2             *
   000545               ***************************************************************
   000546                0100-DATE-AND-TIME.
   000547
   000548                    MOVE FUNCTION CURRENT-DATE TO CURRENT-DATE-FIELDS.                    IFN 460
   000549                    MOVE CORRESPONDING CURRENT-DATE TO OUT-CURRENT-DATE.                  461 228
   000550                    MOVE CORRESPONDING CURRENT-TIME TO OUT-CURRENT-TIMES.                 465 247
   000551                    MOVE CORRESPONDING CURRENT-TIME TO OUT-CURRENT-TIMES2.                465 401
   000552
   000553                0100-EXIT. EXIT.
   000554
   000555               ***************************************************************
   000556               * PERFORM HEADERS EVERY 10 LINES FOR THE FIRST REPORT         *
   000557               ***************************************************************
   000558                0110-HEADERS-ONE.
   000559
   000560                    IF LINE-CTR > 9                                                       99
   000561      1                MOVE 0 TO LINE-CTR                                                 99
   000562                    END-IF.
   000563
   000564                    IF LINE-CTR = 0                                                       99
   000565      1               ADD 1 TO PAGE-CTR                                                   100
   000566      1               MOVE PAGE-CTR TO OUT-PAGE-CTR                                       100 240
   000567
   000568      1               WRITE REPORT-RECORD FROM HEADER1 AFTER 2                            62 227
   000569      1               WRITE REPORT-RECORD FROM HEADER2 AFTER 1                            62 246
   000570      1               WRITE REPORT-RECORD FROM HEADER3 AFTER 2                            62 259
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    13
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000571      1               WRITE REPORT-RECORD FROM HEADER4 AFTER 1                            62 273
   000572      1               WRITE REPORT-RECORD FROM HEADER5 AFTER 1                            62 288
   000573                    END-IF.
   000574
   000575                0110-EXIT. EXIT.
   000576
   000577               ***************************************************************
   000578               * PERFORM HEADERS 2 EVERY 16 LINES FOR THE SECOND REPORT      *
   000579               ***************************************************************
   000580                0120-HEADERS-TWO.
   000581
   000582                    IF LINE-CTR > 15                                                      99
   000583      1               MOVE 0 TO LINE-CTR                                                  99
   000584                    END-IF.
   000585
   000586                    IF LINE-CTR = 0                                                       99
   000587      1               ADD 1 TO PAGE-CTR                                                   100
   000588      1               MOVE PAGE-CTR TO OUT-PAGE-CTR                                       100 240
   000589
   000590      1               WRITE REPORT-RECORD FROM HEADER1 AFTER 2                            62 227
   000591      1               WRITE REPORT-RECORD FROM HEADER6 AFTER 1                            62 400
   000592      1               WRITE REPORT-RECORD FROM HEADER7 AFTER 2                            62 413
   000593      1               WRITE REPORT-RECORD FROM HEADER8 AFTER 1                            62 432
   000594                    END-IF.
   000595
   000596                0120-EXIT. EXIT.
   000597
   000598               ***************************************************************
   000599               * CLEARS THE VLAUES FOR PRINT LINES                           *
   000600               ***************************************************************
   000601                0130-PROCESS-CLEAR.
   000602
   000603                    MOVE SPACES TO NO-PROCESS-SPACES.                                     IMP 317
   000604                    MOVE SPACES TO NO-PROCESS-SPACES2.                                    IMP 341
   000605                    MOVE SPACES TO OUT-PAR.                                               IMP 310
   000606                    MOVE SPACES TO OUT-PAR-CLOSE.                                         IMP 312
   000607                    MOVE SPACES TO OUT-PAR2.                                              IMP 335
   000608                    MOVE SPACES TO OUT-PAR-CLOSE2.                                        IMP 337
   000609
   000610
   000611                0130-EXIT. EXIT.
   000612
   000613               ***************************************************************
   000614               * IF THE FUND NUMBER WAS FOUND                                *
   000615               ***************************************************************
   000616                0310-FUND-FOUND.
   000617
   000618                    MOVE TBL-INV-FUND-NBR (ORCH-NDX) TO OUT-FUND-NUM.                     71 69 328
   000619                    MOVE TBL-FUND-NME (FUND-NDX) TO OUT-FUND-NME.                         88 85 330
   000620
   000621                    PERFORM 0410-PROCESS-TRAN-TYPE.                                       725
   000622
   000623                0310-EXIT. EXIT.
   000624
   000625               ***************************************************************
   000626               * IF THE FUND NUMBER WAS NOT FOUND                            *
   000627               ***************************************************************
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    14
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000628                0320-FUND-NOT-FOUND.
   000629
   000630               * WILL HAVE TO MOVE THE END-AMT TO THE PRINT LINE AS WELL AS
   000631               * THE TRAN TYPE AND TOTAL AMOUNT
   000632
   000633                    MOVE TBL-ORCH-NME (ORCH-NDX) TO OUT-ORCH-NME3.                        70 69 192
   000634                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-FUND-END-AMT.                  72 69 202
   000635
   000636                    IF IN-TRAN-TYPE = 'D'                                                 43
   000637      1               MOVE DEP-ERR TO OUT-FUND-TRAN-ERR                                   161 204
   000638      1               MOVE SPACES TO OPEN-PER                                             IMP 206
   000639      1               MOVE ZERO-DOL-ERR2 TO OUT-DOL-AMT                                   183 207
   000640      1               MOVE SPACES TO CLOSE-PER                                            IMP 208
   000641
   000642      1             ELSE IF IN-TRAN-TYPE = 'C'                                            43
   000643      2               MOVE REINV-ERR TO OUT-FUND-TRAN-ERR                                 169 204
   000644      2               MOVE SPACES TO OPEN-PER                                             IMP 206
   000645      2               MOVE ZERO-DOL-ERR2 TO OUT-DOL-AMT                                   183 207
   000646      2               MOVE SPACES TO CLOSE-PER                                            IMP 208
   000647
   000648      2             ELSE IF IN-TRAN-TYPE = 'W'                                            43
   000649      3               MOVE WITH-ERR TO OUT-FUND-TRAN-ERR                                  163 204
   000650      3               MOVE PAR-OPEN TO OPEN-PER                                           185 206
   000651      3               MOVE ZERO-DOL-ERR2 TO OUT-DOL-AMT                                   183 207
   000652      3               MOVE PAR-CLOSE TO CLOSE-PER                                         186 208
   000653
   000654      3             ELSE IF IN-TRAN-TYPE = 'E'                                            43
   000655      4               MOVE EXCH-ERR TO OUT-FUND-TRAN-ERR                                  165 204
   000656      4               MOVE PAR-OPEN TO OPEN-PER                                           185 206
   000657      4               MOVE ZERO-DOL-ERR2 TO OUT-DOL-AMT                                   183 207
   000658      4               MOVE PAR-CLOSE TO CLOSE-PER                                         186 208
   000659
   000660      4             ELSE IF IN-TRAN-TYPE = 'T'                                            43
   000661      5               MOVE TRAN-ERR TO OUT-FUND-TRAN-ERR                                  167 204
   000662      5               MOVE PAR-OPEN TO OPEN-PER                                           185 206
   000663      5               MOVE ZERO-DOL-ERR2 TO OUT-DOL-AMT                                   183 207
   000664      5               MOVE PAR-CLOSE TO CLOSE-PER                                         186 208
   000665
   000666      4             END-IF.
   000667
   000668                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-FUND-ERR-NEW.                  72 69 210
   000669
   000670                    PERFORM 0110-HEADERS-ONE.                                             558
   000671
   000672                    COMPUTE TOT-ENDOWMT-AMT ROUNDED =                                     129
   000673                        TOT-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                     129 72 69
   000674
   000675                    COMPUTE TOT-NEW-ENDOWMT-AMT ROUNDED =                                 133
   000676                        TOT-NEW-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                 133 72 69
   000677
   000678                    WRITE REPORT-RECORD FROM FUND-ERR-LN1 AFTER 2.                        62 191
   000679                    WRITE REPORT-RECORD FROM FUND-ERR-LN2 AFTER 1.                        62 198
   000680
   000681                    ADD 1 TO TRAN-CTR.                                                    102
   000682                    ADD 1 TO LINE-CTR.                                                    99
   000683
   000684                0320-EXIT. EXIT.
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    15
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000685
   000686               ***************************************************************
   000687               * SEARCH FUND TABLE                                           *
   000688               ***************************************************************
   000689                0330-SEARCH-FUND-TBL.
   000690
   000691                    SEARCH ALL TBL-FUND-NTRY                                              82
   000692                      AT END
   000693      1                 PERFORM 0320-FUND-NOT-FOUND                                       628
   000694                        WHEN TBL-FUND-NBR (FUND-NDX) =                                    87 85
   000695                         TBL-INV-FUND-NBR (ORCH-NDX)                                      71 69
   000696      1                     PERFORM 0310-FUND-FOUND                                       616
   000697                    END-SEARCH.
   000698
   000699                0330-EXIT. EXIT.
   000700
   000701               ***************************************************************
   000702               * PROCESSES THE TRAN RECORD                                   *
   000703               ***************************************************************
   000704                0400-PROCESS-TRAN.
   000705
   000706                    SET ORCH-NDX TO 1.                                                    69
   000707
   000708               *AT END MEANS IT WAS NOT FOUND. PUT ERROR MESSAGE THERE
   000709                    SEARCH TBL-ORCH-NTRY                                                  68
   000710                      AT END
   000711      1                 PERFORM 0420-PROCESS-TRAN-TYPE-BAD                                749
   000712                      WHEN TBL-ORCH-NME (ORCH-NDX) = IN-ORCH-NME OF TRAN-RECORD           70 69 42 41
   000713      1                 PERFORM 0330-SEARCH-FUND-TBL                                      689
   000714                    END-SEARCH.
   000715
   000716                    READ TRAN-FILE                                                        37
   000717      1               AT END MOVE 'Y' TO EOF-FLAG                                         93
   000718                    END-READ.
   000719
   000720                0400-EXIT. EXIT.
   000721
   000722               ***************************************************************
   000723               * THIS WILL PROCESS WHICH TRAN TYPE IT IS WHEN ITS GOOD       *
   000724               ***************************************************************
   000725                0410-PROCESS-TRAN-TYPE.
   000726
   000727                    IF IN-TRAN-TYPE = 'D'                                                 43
   000728      1               PERFORM 0500-PROCESS-DEPOSIT                                        791
   000729
   000730      1             ELSE IF IN-TRAN-TYPE = 'C'                                            43
   000731      2               PERFORM 0510-PROCESS-REINVEST                                       828
   000732
   000733      2             ELSE IF IN-TRAN-TYPE = 'W'                                            43
   000734      3               PERFORM 0520-PROCESS-WITHDRAWAL                                     871
   000735
   000736      3             ELSE IF IN-TRAN-TYPE = 'E'                                            43
   000737      4               PERFORM 0520-PROCESS-WITHDRAWAL                                     871
   000738
   000739      4             ELSE IF IN-TRAN-TYPE = 'T'                                            43
   000740      5               PERFORM 0520-PROCESS-WITHDRAWAL                                     871
   000741
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    16
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000742      4             END-IF.
   000743
   000744                0410-EXIT. EXIT.
   000745
   000746               ***************************************************************
   000747               * THIS WILL PROCESS WHICH TRAN TYPE IT IS WHEN ITS BAD        *
   000748               ***************************************************************
   000749                0420-PROCESS-TRAN-TYPE-BAD.
   000750
   000751                    IF IN-TRAN-TYPE = 'D'                                                 43
   000752      1               PERFORM 0110-HEADERS-ONE                                            558
   000753      1               MOVE IN-ORCH-NME OF TRAN-RECORD TO OUT-ORCH-NME2                    42 41 216
   000754      1               MOVE DEP-ERR TO OUT-TRAN-ERR-MSG                                    161 221
   000755      1               WRITE REPORT-RECORD FROM ERR-TRAN-LN AFTER 2                        62 215
   000756
   000757      1             ELSE IF IN-TRAN-TYPE = 'C'                                            43
   000758      2               PERFORM 0110-HEADERS-ONE                                            558
   000759      2               MOVE IN-ORCH-NME OF TRAN-RECORD TO OUT-ORCH-NME2                    42 41 216
   000760      2               MOVE REINV-ERR TO OUT-TRAN-ERR-MSG                                  169 221
   000761      2               WRITE REPORT-RECORD FROM ERR-TRAN-LN AFTER 2                        62 215
   000762
   000763      2             ELSE IF IN-TRAN-TYPE = 'W'                                            43
   000764      3               PERFORM 0110-HEADERS-ONE                                            558
   000765      3               MOVE IN-ORCH-NME OF TRAN-RECORD TO OUT-ORCH-NME2                    42 41 216
   000766      3               MOVE WITH-ERR TO OUT-TRAN-ERR-MSG                                   163 221
   000767      3               WRITE REPORT-RECORD FROM ERR-TRAN-LN AFTER 2                        62 215
   000768
   000769      3             ELSE IF IN-TRAN-TYPE = 'E'                                            43
   000770      4               PERFORM 0110-HEADERS-ONE                                            558
   000771      4               MOVE IN-ORCH-NME OF TRAN-RECORD TO OUT-ORCH-NME2                    42 41 216
   000772      4               MOVE EXCH-ERR TO OUT-TRAN-ERR-MSG                                   165 221
   000773      4               WRITE REPORT-RECORD FROM ERR-TRAN-LN AFTER 2                        62 215
   000774
   000775      4             ELSE IF IN-TRAN-TYPE = 'T'                                            43
   000776      5               PERFORM 0110-HEADERS-ONE                                            558
   000777      5               MOVE IN-ORCH-NME OF TRAN-RECORD TO OUT-ORCH-NME2                    42 41 216
   000778      5               MOVE TRAN-ERR TO OUT-TRAN-ERR-MSG                                   167 221
   000779      5               WRITE REPORT-RECORD FROM ERR-TRAN-LN AFTER 2                        62 215
   000780
   000781      4             END-IF.
   000782
   000783                    ADD 1 TO TRAN-CTR.                                                    102
   000784                    ADD 1 TO LINE-CTR.                                                    99
   000785
   000786                0420-EXIT. EXIT.
   000787
   000788               ***************************************************************
   000789               * FOR THE DEPOSIT                                             *
   000790               ***************************************************************
   000791                0500-PROCESS-DEPOSIT.
   000792
   000793                    PERFORM 0110-HEADERS-ONE.                                             558
   000794
   000795                    PERFORM 0130-PROCESS-CLEAR.                                           601
   000796
   000797               * GET THE TOTAL FOR THE NEW AMOUNT
   000798                    COMPUTE NEW-END-AMT ROUNDED =                                         106
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    17
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000799                      TBL-ENDOWMT-AMT (ORCH-NDX) + IN-ENDOWMT-CHG-AMT.                    72 69 44
   000800
   000801                    PERFORM 0600-PROCESS-SHR-AMT.                                         1005
   000802                    PERFORM 0620-PROCESS-CALC-TOT.                                        1065
   000803
   000804                    MOVE TBL-ORCH-NME (ORCH-NDX) TO OUT-ORCH-NME.                         70 69 303
   000805                    MOVE DEP TO OUT-TRAN-TYPE.                                            146 308
   000806
   000807               * SECOND LINE
   000808
   000809                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-END-AMT.                       72 69 332
   000810                    MOVE IN-ENDOWMT-CHG-AMT TO OUT-END-CHG-AMT.                           44 336
   000811                    MOVE NEW-END-AMT TO OUT-NEW-END-AMT.                                  106 344
   000812
   000813                    WRITE REPORT-RECORD FROM RPTLN-1 AFTER 2.                             62 302
   000814                    WRITE REPORT-RECORD FROM RPTLN-2 AFTER 1.                             62 325
   000815
   000816                    ADD 1 TO TRAN-CTR.                                                    102
   000817                    ADD 1 TO LINE-CTR.                                                    99
   000818
   000819                    IF NEW-END-AMT <= 999999.99                                           106
   000820      1               PERFORM 0700-PROCESS-LE-FILE                                        1116
   000821                    END-IF.
   000822
   000823                0500-EXIT. EXIT.
   000824
   000825               ***************************************************************
   000826               * FOR REINVESTMENT                                            *
   000827               ***************************************************************
   000828                0510-PROCESS-REINVEST.
   000829
   000830                    PERFORM 0110-HEADERS-ONE.                                             558
   000831                    PERFORM 0130-PROCESS-CLEAR.                                           601
   000832
   000833                    MOVE TBL-ORCH-NME (ORCH-NDX) TO OUT-ORCH-NME.                         70 69 303
   000834                    MOVE REINV TO OUT-TRAN-TYPE.                                          150 308
   000835
   000836               * MOVE THE FLAG NUMBER TO A VARIABLE FOR COMPUTING
   000837                    MOVE TBL-CAP-GAINS-PCT-FLG (ORCH-NDX) TO FLAG-VAL.                    74 69 112
   000838
   000839                    COMPUTE IN-ENDOWMT-CHG-AMT ROUNDED =                                  44
   000840                      TBL-ENDOWMT-AMT (ORCH-NDX) *                                        72 69
   000841                        TBL-FUND-CAP-GAINS-PCT (FUND-NDX, FLAG-VAL).                      90 85 112
   000842
   000843                    COMPUTE IN-ENDOWMT-CHG-AMT ROUNDED =                                  44
   000844                      IN-ENDOWMT-CHG-AMT / 100.                                           44
   000845
   000846                    COMPUTE NEW-END-AMT ROUNDED =                                         106
   000847                      TBL-ENDOWMT-AMT (ORCH-NDX) + IN-ENDOWMT-CHG-AMT.                    72 69 44
   000848
   000849                    PERFORM 0600-PROCESS-SHR-AMT.                                         1005
   000850                    PERFORM 0620-PROCESS-CALC-TOT.                                        1065
   000851
   000852                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-END-AMT.                       72 69 332
   000853                    MOVE IN-ENDOWMT-CHG-AMT TO OUT-END-CHG-AMT.                           44 336
   000854                    MOVE NEW-END-AMT TO OUT-NEW-END-AMT.                                  106 344
   000855
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    18
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000856                    WRITE REPORT-RECORD FROM RPTLN-1 AFTER 2.                             62 302
   000857                    WRITE REPORT-RECORD FROM RPTLN-2 AFTER 1.                             62 325
   000858
   000859                    ADD 1 TO TRAN-CTR.                                                    102
   000860                    ADD 1 TO LINE-CTR.                                                    99
   000861
   000862                    IF NEW-END-AMT <= 999999.99                                           106
   000863      1               PERFORM 0700-PROCESS-LE-FILE                                        1116
   000864                    END-IF.
   000865
   000866                0510-EXIT. EXIT.
   000867
   000868               ***************************************************************
   000869               * FOR WITHDRAWAL                                              *
   000870               ***************************************************************
   000871                0520-PROCESS-WITHDRAWAL.
   000872
   000873                    PERFORM 0110-HEADERS-ONE.                                             558
   000874
   000875                    PERFORM 0130-PROCESS-CLEAR.                                           601
   000876
   000877
   000878                    MOVE TBL-ORCH-NME (ORCH-NDX) TO OUT-ORCH-NME.                         70 69 303
   000879                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-END-AMT.                       72 69 332
   000880
   000881                    COMPUTE NEW-END-AMT ROUNDED =                                         106
   000882                      TBL-ENDOWMT-AMT (ORCH-NDX) - IN-ENDOWMT-CHG-AMT.                    72 69 44
   000883
   000884               * IF IT IS BELOW THE LIMIT, ITS BAD
   000885                    IF NEW-END-AMT <= TBL-ENDOWMT-USUF-LMT (ORCH-NDX)                     106 73 69
   000886      1               IF IN-TRAN-TYPE = 'W'                                               43
   000887      2                 PERFORM 0550-PROCESS-NOT-WITH                                     984
   000888
   000889      2               ELSE IF IN-TRAN-TYPE = 'E'                                          43
   000890      3                 PERFORM 0530-PROCESS-NOT-EXCHANGE                                 941
   000891
   000892      3               ELSE IF IN-TRAN-TYPE = 'T'                                          43
   000893      4                PERFORM 0540-PROCESS-NOT-TRANS                                     963
   000894
   000895      3               END-IF
   000896
   000897                    ELSE
   000898      1               IF IN-TRAN-TYPE = 'W'                                               43
   000899
   000900      2                 PERFORM 0600-PROCESS-SHR-AMT                                      1005
   000901      2                 PERFORM 0610-PROCESS-NEG-AMT                                      1042
   000902
   000903      2                 MOVE WITHD TO OUT-TRAN-TYPE                                       148 308
   000904      2                 PERFORM 0620-PROCESS-CALC-TOT                                     1065
   000905
   000906      2               ELSE IF IN-TRAN-TYPE = 'E'                                          43
   000907
   000908      3                 PERFORM 0600-PROCESS-SHR-AMT                                      1005
   000909      3                 PERFORM 0610-PROCESS-NEG-AMT                                      1042
   000910
   000911      3                 MOVE EXCOUT TO OUT-TRAN-TYPE                                      152 308
   000912      3                 PERFORM 0620-PROCESS-CALC-TOT                                     1065
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    19
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000913
   000914
   000915      3               ELSE IF IN-TRAN-TYPE = 'T'                                          43
   000916
   000917      4                 PERFORM 0600-PROCESS-SHR-AMT                                      1005
   000918      4                 PERFORM 0610-PROCESS-NEG-AMT                                      1042
   000919
   000920      4                 MOVE TRANOUT TO OUT-TRAN-TYPE                                     154 308
   000921      4                 PERFORM 0620-PROCESS-CALC-TOT                                     1065
   000922
   000923      3               END-IF
   000924      2             END-IF.
   000925
   000926                    WRITE REPORT-RECORD FROM RPTLN-1 AFTER 2.                             62 302
   000927                    WRITE REPORT-RECORD FROM RPTLN-2 AFTER 1.                             62 325
   000928
   000929                    ADD 1 TO TRAN-CTR.                                                    102
   000930                    ADD 1 TO LINE-CTR.                                                    99
   000931
   000932                    IF NEW-END-AMT <= 999999.99                                           106
   000933      1               PERFORM 0700-PROCESS-LE-FILE                                        1116
   000934                    END-IF.
   000935
   000936                0520-EXIT. EXIT.
   000937
   000938               ***************************************************************
   000939               * PROCESS NOT EXCHANGE OUT                                    *
   000940               ***************************************************************
   000941                0530-PROCESS-NOT-EXCHANGE.
   000942
   000943                    MOVE EXCH-ERR TO OUT-TRAN-ERR.                                        165 314
   000944                    MOVE ZERO-ERR TO OUT-ZERO-ERR.                                        179 316
   000945                    MOVE ZERO-DOL-ERR TO OUT-ZERO-DOL-ERR.                                181 340
   000946                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-NEW-END-AMT.                   72 69 344
   000947                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO NEW-END-AMT.                       72 69 106
   000948
   000949                    PERFORM 0630-PROCESS-BAD-SHR.                                         1090
   000950
   000951                    COMPUTE TOT-ENDOWMT-AMT =                                             129
   000952                        TOT-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                     129 72 69
   000953
   000954                    COMPUTE TOT-NEW-ENDOWMT-AMT =                                         133
   000955                        TOT-NEW-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                 133 72 69
   000956
   000957
   000958                0530-EXIT. EXIT.
   000959
   000960               ***************************************************************
   000961               * PROCESS NOT TRANS OUT                                       *
   000962               ***************************************************************
   000963                0540-PROCESS-NOT-TRANS.
   000964
   000965                    MOVE TRAN-ERR TO OUT-TRAN-ERR.                                        167 314
   000966                    MOVE ZERO-ERR TO OUT-ZERO-ERR.                                        179 316
   000967                    MOVE ZERO-DOL-ERR TO OUT-ZERO-DOL-ERR.                                181 340
   000968                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-NEW-END-AMT.                   72 69 344
   000969                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO NEW-END-AMT.                       72 69 106
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    20
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000970
   000971                    PERFORM 0630-PROCESS-BAD-SHR.                                         1090
   000972
   000973                    COMPUTE TOT-ENDOWMT-AMT =                                             129
   000974                        TOT-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                     129 72 69
   000975
   000976                    COMPUTE TOT-NEW-ENDOWMT-AMT =                                         133
   000977                        TOT-NEW-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                 133 72 69
   000978
   000979                0540-EXIT. EXIT.
   000980
   000981               ***************************************************************
   000982               * PROCESS NOT WITHDRAWAL                                      *
   000983               ***************************************************************
   000984                0550-PROCESS-NOT-WITH.
   000985
   000986                    MOVE WITH-ERR TO OUT-TRAN-ERR.                                        163 314
   000987                    MOVE ZERO-ERR TO OUT-ZERO-ERR.                                        179 316
   000988                    MOVE ZERO-DOL-ERR TO OUT-ZERO-DOL-ERR.                                181 340
   000989                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO OUT-NEW-END-AMT.                   72 69 344
   000990                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO NEW-END-AMT.                       72 69 106
   000991
   000992                    PERFORM 0630-PROCESS-BAD-SHR.                                         1090
   000993
   000994                    COMPUTE TOT-ENDOWMT-AMT =                                             129
   000995                        TOT-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                     129 72 69
   000996
   000997                    COMPUTE TOT-NEW-ENDOWMT-AMT =                                         133
   000998                        TOT-NEW-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                 133 72 69
   000999
   001000                0550-EXIT. EXIT.
   001001
   001002               ***************************************************************
   001003               * PROCESS SHARE AMOUNTS                                       *
   001004               ***************************************************************
   001005                0600-PROCESS-SHR-AMT.
   001006
   001007               * SETS THE VARIABLES BEING PASSED INTO CVALCSHRS AS THE RIGHT
   001008               * VALUES
   001009                    MOVE TBL-FUND-SHR-PRC (FUND-NDX) TO PRICE.                            89 85 485
   001010
   001011               * for the starting amount
   001012                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO STARTING.                          72 69 483
   001013
   001014                    CALL CACLSUB USING STARTING                                           477 483
   001015                                       PRICE                                              485
   001016                                       ENDOWMT-SHR-STRT.                                  118
   001017
   001018               * for the changed amount
   001019                    MOVE IN-ENDOWMT-CHG-AMT TO STARTING.                                  44 483
   001020
   001021                    CALL CACLSUB USING STARTING                                           477 483
   001022                                       PRICE                                              485
   001023                                       ENDOWMT-SHR-CHG.                                   120
   001024
   001025               * for the new amount
   001026                    MOVE NEW-END-AMT TO STARTING.                                         106 483
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    21
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  001027
   001028                    CALL CACLSUB USING STARTING                                           477 483
   001029                                       PRICE                                              485
   001030                                       ENDOWMT-SHR-NEW.                                   122
   001031
   001032                    MOVE ENDOWMT-SHR-STRT TO OUT-END-SHR-AMT.                             118 305
   001033                    MOVE ENDOWMT-SHR-CHG TO OUT-CHG-SHR-AMT.                              120 311
   001034                    MOVE ENDOWMT-SHR-NEW TO OUT-NEW-SHR-AMT.                              122 320
   001035
   001036
   001037                0600-EXIT. EXIT.
   001038
   001039               ***************************************************************
   001040               * USED TO PROCESS THE NEGATIVE AMOUNTS HAVING () AROUND THEM  *
   001041               ***************************************************************
   001042                0610-PROCESS-NEG-AMT.
   001043
   001044                    MOVE IN-ENDOWMT-CHG-AMT TO OUT-END-CHG-AMT.                           44 336
   001045
   001046                    COMPUTE ENDOWMT-SHR-CHG ROUNDED =                                     120
   001047                      ENDOWMT-SHR-CHG * -1.                                               120
   001048
   001049                    COMPUTE IN-ENDOWMT-CHG-AMT =                                          44
   001050                      IN-ENDOWMT-CHG-AMT * -1.                                            44
   001051
   001052                    MOVE NEW-END-AMT TO OUT-NEW-END-AMT.                                  106 344
   001053
   001054                    MOVE PAR-OPEN TO OUT-PAR.                                             185 310
   001055                    MOVE PAR-CLOSE TO OUT-PAR-CLOSE.                                      186 312
   001056                    MOVE PAR-OPEN TO OUT-PAR2.                                            185 335
   001057                    MOVE PAR-CLOSE TO OUT-PAR-CLOSE2.                                     186 337
   001058
   001059
   001060                0610-EXIT. EXIT.
   001061
   001062               ***************************************************************
   001063               * PROCESS CALC TOTALS                                         *
   001064               ***************************************************************
   001065                0620-PROCESS-CALC-TOT.
   001066
   001067                    COMPUTE TOT-ENDOWMT-AMT ROUNDED =                                     129
   001068                        TOT-ENDOWMT-AMT + TBL-ENDOWMT-AMT (ORCH-NDX).                     129 72 69
   001069
   001070                    COMPUTE TOT-ENDOWMT-CHG-AMT ROUNDED =                                 131
   001071                        TOT-ENDOWMT-CHG-AMT + IN-ENDOWMT-CHG-AMT.                         131 44
   001072
   001073                    COMPUTE TOT-NEW-ENDOWMT-AMT ROUNDED =                                 133
   001074                        TOT-NEW-ENDOWMT-AMT + NEW-END-AMT.                                133 106
   001075
   001076                    COMPUTE TOT-SHR-STR ROUNDED =                                         135
   001077                      TOT-SHR-STR + ENDOWMT-SHR-STRT.                                     135 118
   001078
   001079                    COMPUTE TOT-SHR-CHG ROUNDED =                                         137
   001080                      TOT-SHR-CHG + ENDOWMT-SHR-CHG.                                      137 120
   001081
   001082                    COMPUTE TOT-SHR-NEW ROUNDED =                                         139
   001083                      TOT-SHR-NEW + ENDOWMT-SHR-NEW.                                      139 122
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    22
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  001084
   001085                0620-EXIT. EXIT.
   001086
   001087               ***************************************************************
   001088               * COMPUTE SHARE AMOUNT FOR BAD WITHDRAWALS                    *
   001089               ***************************************************************
   001090                0630-PROCESS-BAD-SHR.
   001091
   001092               * since the starting amount = new amount here, just calc the
   001093               * starting shares and move it to the new area and add it to the
   001094               * total for both the starting and new shares
   001095                    MOVE TBL-ENDOWMT-AMT (ORCH-NDX) TO STARTING.                          72 69 483
   001096                    MOVE TBL-FUND-SHR-PRC (FUND-NDX) TO PRICE.                            89 85 485
   001097
   001098                    CALL CACLSUB USING STARTING                                           477 483
   001099                                       PRICE                                              485
   001100                                       ENDOWMT-SHR-STRT.                                  118
   001101
   001102                    MOVE ENDOWMT-SHR-STRT TO OUT-END-SHR-AMT.                             118 305
   001103                    MOVE ENDOWMT-SHR-STRT TO OUT-NEW-SHR-AMT.                             118 320
   001104
   001105                    COMPUTE TOT-SHR-STR ROUNDED =                                         135
   001106                      TOT-SHR-STR + ENDOWMT-SHR-STRT.                                     135 118
   001107
   001108                    COMPUTE TOT-SHR-NEW ROUNDED =                                         139
   001109                      TOT-SHR-NEW + ENDOWMT-SHR-STRT.                                     139 118
   001110
   001111                0630-EXIT. EXIT.
   001112
   001113               ***************************************************************
   001114               * PROCESSES THE SECOND FILE                                   *
   001115               ***************************************************************
   001116                0700-PROCESS-LE-FILE.
   001117
   001118                    MOVE TBL-ORCH-NME (ORCH-NDX) TO LE-ORCH-NME.                          70 69 53
   001119                    MOVE TBL-FUND-NBR (FUND-NDX) TO LE-FUND-NBR.                          87 85 54
   001120                    MOVE NEW-END-AMT TO LE-ENDOWMT-AMT.                                   106 55
   001121
   001122                    WRITE LOW-ENDOWMT-RECORD.                                             52
   001123
   001124                0700-EXIT. EXIT.
   001125
   001126               ***************************************************************
   001127               * PRINT LE FILE                                               *
   001128               ***************************************************************
   001129                0710-PROCESS-PRINT-LE.
   001130
   001131                    PERFORM 0120-HEADERS-TWO.                                             580
   001132
   001133                    MOVE LE-ORCH-NME TO OUT-LE-ORCH-NME.                                  53 447
   001134                    MOVE LE-FUND-NBR TO OUT-LE-FUND-NUM.                                  54 449
   001135                    MOVE LE-ENDOWMT-AMT TO OUT-LE-END-AMT.                                55 455
   001136
   001137                    SEARCH ALL TBL-FUND-NTRY                                              82
   001138                      AT END
   001139      1                 DISPLAY 'NOTHING'
   001140                        WHEN TBL-FUND-NBR (FUND-NDX) =                                    87 85
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    23
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  001141                         LE-FUND-NBR                                                      54
   001142      1                     PERFORM 0720-PROCESS-LE-SHR                                   1159
   001143                    END-SEARCH.
   001144
   001145                    WRITE REPORT-RECORD FROM RPT-LN3 AFTER 2.                             62 446
   001146
   001147                    ADD 1 TO LINE-CTR.                                                    99
   001148                    ADD 1 TO TRAN-CTR.                                                    102
   001149
   001150                    READ LOW-ENDOWMT-FILE                                                 48
   001151      1               AT END MOVE 'Y' TO EOF-FLAG                                         93
   001152                    END-READ.
   001153
   001154                0710-EXIT. EXIT.
   001155
   001156               ***************************************************************
   001157               * PROCESS THE NAME AND SHR AMOUNTS FOR THE LE FILE            *
   001158               ***************************************************************
   001159                0720-PROCESS-LE-SHR.
   001160
   001161                    MOVE TBL-FUND-NME (FUND-NDX) TO OUT-LE-INST-NME.                      88 85 451
   001162
   001163               * SETS THE VARIABLES BEING PASSED INTO CVALCSHRS AS THE RIGHT
   001164               * VALUES
   001165                    MOVE LE-ENDOWMT-AMT TO STARTING.                                      55 483
   001166                    MOVE TBL-FUND-SHR-PRC (FUND-NDX) TO PRICE.                            89 85 485
   001167               *     MOVE 0 TO ENDOWMT-SHR-NEW.
   001168
   001169                    CALL CACLSUB USING STARTING                                           477 483
   001170                                       PRICE                                              485
   001171                                       ENDOWMT-SHR-NEW.                                   122
   001172
   001173                    MOVE ENDOWMT-SHR-NEW TO OUT-LE-SHR-AMT.                               122 453
   001174
   001175                0720-EXIT. EXIT.
   001176
   001177               ***************************************************************
   001178               * PROCESSES THE TOTALS FOR THE FIRST REPORT                   *
   001179               ***************************************************************
   001180                0800-PROCESS-TOTALS.
   001181
   001182                    MOVE TRAN-CTR TO OUT-TRAN-CTR.                                        102 363
   001183                    MOVE TOT-ENDOWMT-AMT TO OUT-TOT-END-STR.                              129 380
   001184                    MOVE TOT-ENDOWMT-CHG-AMT TO OUT-TOT-END-CHG.                          131 382
   001185                    MOVE TOT-NEW-ENDOWMT-AMT TO OUT-TOT-END-NEW.                          133 384
   001186
   001187                    MOVE TOT-SHR-STR TO OUT-TOT-SHR-STR.                                  135 367
   001188                    MOVE TOT-SHR-CHG TO OUT-TOT-SHR-CHG.                                  137 369
   001189                    MOVE TOT-SHR-NEW TO OUT-TOT-SHR-NEW.                                  139 371
   001190
   001191                    WRITE REPORT-RECORD FROM FOOTER1 AFTER 1.                             62 349
   001192                    WRITE REPORT-RECORD FROM TOT-LN1 AFTER 1.                             62 360
   001193                    WRITE REPORT-RECORD FROM TOT-LN2 AFTER 1.                             62 376
   001194
   001195                0800-EXIT. EXIT.
   001196
   001197               ***************************************************************
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    24
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  001198               * RESETS ALL THE VALUES TO 0                                  *
   001199               ***************************************************************
   001200                0900-PROCESS-RESET.
   001201
   001202                    MOVE 'N' TO EOF-FLAG.                                                 93
   001203                    MOVE 0 TO LINE-CTR.                                                   99
   001204                    MOVE 0 TO TRAN-CTR.                                                   102
   001205                    MOVE 0 TO PAGE-CTR.                                                   100
   001206
   001207                0900-EXIT. EXIT.
   001208
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    25
0An "M" preceding a data-name reference indicates that the data-name is modified by this reference.

  Defined   Cross-reference of data names   References

      477   CACLSUB. . . . . . . . . . . .  1014 1021 1028 1098 1169
      482   CALCSHR-VARS
      208   CLOSE-PER. . . . . . . . . . .  M640 M646 M652 M658 M664
      461   CURRENT-DATE . . . . . . . . .  549
      460   CURRENT-DATE-FIELDS. . . . . .  M548
      231   CURRENT-DAY. . . . . . . . . .  M549
      464   CURRENT-DAY. . . . . . . . . .  549
      248   CURRENT-HOUR . . . . . . . . .  M550
      402   CURRENT-HOUR . . . . . . . . .  M551
      466   CURRENT-HOUR . . . . . . . . .  550 551
      250   CURRENT-MINUTE . . . . . . . .  M550
      404   CURRENT-MINUTE . . . . . . . .  M551
      467   CURRENT-MINUTE . . . . . . . .  550 551
      229   CURRENT-MONTH. . . . . . . . .  M549
      463   CURRENT-MONTH. . . . . . . . .  549
      469   CURRENT-MS
      468   CURRENT-SECOND
      465   CURRENT-TIME . . . . . . . . .  550 551
      233   CURRENT-YEAR . . . . . . . . .  M549
      462   CURRENT-YEAR . . . . . . . . .  549
      146   DEP. . . . . . . . . . . . . .  805
      161   DEP-ERR. . . . . . . . . . . .  637 754
      470   DIFF-FROM-GMT
      120   ENDOWMT-SHR-CHG. . . . . . . .  1023 1033 M1046 1047 1080
      122   ENDOWMT-SHR-NEW. . . . . . . .  1030 1034 1083 1171 1173
      118   ENDOWMT-SHR-STRT . . . . . . .  1016 1032 1077 1100 1102 1103 1106 1109
       93   EOF-FLAG . . . . . . . . . . .  M501 M505 M508 512 M527 531 M717 M1151 M1202
      215   ERR-TRAN-LN. . . . . . . . . .  755 761 767 773 779
      165   EXCH-ERR . . . . . . . . . . .  655 772 943
      152   EXCOUT . . . . . . . . . . . .  911
      112   FLAG-VAL . . . . . . . . . . .  M837 841
      349   FOOTER1. . . . . . . . . . . .  1191
      199   FUND-ERR
      191   FUND-ERR-LN1 . . . . . . . . .  678
      198   FUND-ERR-LN2 . . . . . . . . .  679
       85   FUND-NDX . . . . . . . . . . .  619 694 841 1009 1096 1119 1140 1161 1166
       80   FUND-TBL . . . . . . . . . . .  503
      227   HEADER1. . . . . . . . . . . .  568 590
      246   HEADER2. . . . . . . . . . . .  569
      259   HEADER3. . . . . . . . . . . .  570
      273   HEADER4. . . . . . . . . . . .  571
      288   HEADER5. . . . . . . . . . . .  572
      400   HEADER6. . . . . . . . . . . .  591
      413   HEADER7. . . . . . . . . . . .  592
      432   HEADER8. . . . . . . . . . . .  593
       44   IN-ENDOWMT-CHG-AMT . . . . . .  799 810 M839 M843 844 847 853 882 1019 1044 M1049 1050 1071
       42   IN-ORCH-NME. . . . . . . . . .  712 753 759 765 771 777
       43   IN-TRAN-TYPE . . . . . . . . .  636 642 648 654 660 727 730 733 736 739 751 757 763 769 775 886 889 892 898 906
                                            915
       55   LE-ENDOWMT-AMT . . . . . . . .  M1120 1135 1165
       54   LE-FUND-NBR. . . . . . . . . .  M1119 1134 1141
       53   LE-ORCH-NME. . . . . . . . . .  M1118 1133
       99   LINE-CTR . . . . . . . . . . .  560 M561 564 582 M583 586 M682 M784 M817 M860 M930 M1147 M1203
       48   LOW-ENDOWMT-FILE . . . . . . .  30 495 517 524 526 533 1150
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    26
0 Defined   Cross-reference of data names   References

0      52   LOW-ENDOWMT-RECORD . . . . . .  1122
      252   MEFC-HEAD
      406   MEFC-HEAD
      108   NEG-END-AMT
      110   NEG-SHR-AMT
      106   NEW-END-AMT. . . . . . . . . .  M798 811 819 M846 854 862 M881 885 932 M947 M969 M990 1026 1052 1074 1120
      313   NO-PROCESS
      317   NO-PROCESS-SPACES. . . . . . .  M603
      341   NO-PROCESS-SPACES2 . . . . . .  M604
      338   NO-PROCESS2
      206   OPEN-PER . . . . . . . . . . .  M638 M644 M650 M656 M662
      104   ORCH-CTR . . . . . . . . . . .  499
      171   ORCH-ERR
       69   ORCH-NDX . . . . . . . . . . .  618 633 634 668 673 676 695 M706 712 799 804 809 833 837 840 847 852 878 879
                                            882 885 946 947 952 955 968 969 974 977 989 990 995 998 1012 1068 1095 1118
       67   ORCHS-TBL. . . . . . . . . . .  498
      476   ORCHSUB. . . . . . . . . . . .  498
      311   OUT-CHG-SHR-AMT. . . . . . . .  M1033
      228   OUT-CURRENT-DATE . . . . . . .  M549
      247   OUT-CURRENT-TIMES. . . . . . .  M550
      401   OUT-CURRENT-TIMES2 . . . . . .  M551
      207   OUT-DOL-AMT. . . . . . . . . .  M639 M645 M651 M657 M663
      332   OUT-END-AMT. . . . . . . . . .  M809 M852 M879
      336   OUT-END-CHG-AMT. . . . . . . .  M810 M853 M1044
      305   OUT-END-SHR-AMT. . . . . . . .  M1032 M1102
      202   OUT-FUND-END-AMT . . . . . . .  M634
      210   OUT-FUND-ERR-NEW . . . . . . .  M668
      330   OUT-FUND-NME . . . . . . . . .  M619
      328   OUT-FUND-NUM . . . . . . . . .  M618
      204   OUT-FUND-TRAN-ERR. . . . . . .  M637 M643 M649 M655 M661
      455   OUT-LE-END-AMT . . . . . . . .  M1135
      449   OUT-LE-FUND-NUM. . . . . . . .  M1134
      451   OUT-LE-INST-NME. . . . . . . .  M1161
      447   OUT-LE-ORCH-NME. . . . . . . .  M1133
      453   OUT-LE-SHR-AMT . . . . . . . .  M1173
      344   OUT-NEW-END-AMT. . . . . . . .  M811 M854 M946 M968 M989 M1052
      320   OUT-NEW-SHR-AMT. . . . . . . .  M1034 M1103
      303   OUT-ORCH-NME . . . . . . . . .  M804 M833 M878
      216   OUT-ORCH-NME2. . . . . . . . .  M753 M759 M765 M771 M777
      192   OUT-ORCH-NME3. . . . . . . . .  M633
      240   OUT-PAGE-CTR . . . . . . . . .  M566 M588
      310   OUT-PAR. . . . . . . . . . . .  M605 M1054
      312   OUT-PAR-CLOSE. . . . . . . . .  M606 M1055
      337   OUT-PAR-CLOSE2 . . . . . . . .  M608 M1057
      335   OUT-PAR2 . . . . . . . . . . .  M607 M1056
      382   OUT-TOT-END-CHG. . . . . . . .  M1184
      384   OUT-TOT-END-NEW. . . . . . . .  M1185
      380   OUT-TOT-END-STR. . . . . . . .  M1183
      369   OUT-TOT-SHR-CHG. . . . . . . .  M1188
      371   OUT-TOT-SHR-NEW. . . . . . . .  M1189
      367   OUT-TOT-SHR-STR. . . . . . . .  M1187
      363   OUT-TRAN-CTR . . . . . . . . .  M1182
      314   OUT-TRAN-ERR . . . . . . . . .  M943 M965 M986
      221   OUT-TRAN-ERR-MSG . . . . . . .  M754 M760 M766 M772 M778
      308   OUT-TRAN-TYPE. . . . . . . . .  M805 M834 M903 M911 M920
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    27
0 Defined   Cross-reference of data names   References

0     340   OUT-ZERO-DOL-ERR . . . . . . .  M945 M967 M988
      316   OUT-ZERO-ERR . . . . . . . . .  M944 M966 M987
      100   PAGE-CTR . . . . . . . . . . .  M565 566 M587 588 M1205
      238   PAGE-HEADER
      186   PAR-CLOSE. . . . . . . . . . .  652 658 664 1055 1057
      185   PAR-OPEN . . . . . . . . . . .  650 656 662 1054 1056
      485   PRICE. . . . . . . . . . . . .  M1009 1015 1022 1029 M1096 1099 M1166 1170
      307   PROCESS. . . . . . . . . . . .  313 317
      333   PROCESS2 . . . . . . . . . . .  338 341
      150   REINV. . . . . . . . . . . . .  834
      169   REINV-ERR. . . . . . . . . . .  643 760
       59   REPORT-FILE. . . . . . . . . .  31 496 534
       62   REPORT-RECORD. . . . . . . . .  M568 M569 M570 M571 M572 M590 M591 M592 M593 M678 M679 M755 M761 M767 M773 M779
                                            M813 M814 M856 M857 M926 M927 M1145 M1191 M1192 M1193
        0   RETURN-CODE. . . . . . . . . .  536 M536
      446   RPT-LN3. . . . . . . . . . . .  1145
      302   RPTLN-1. . . . . . . . . . . .  813 856 926
      325   RPTLN-2. . . . . . . . . . . .  814 857 927
      117   SHAR-VALS
      483   STARTING . . . . . . . . . . .  M1012 1014 M1019 1021 M1026 1028 M1095 1098 M1165 1169
      160   STORAGE-ERR
      145   STORAGE-FLG-VAL
      128   STORAGE-TOTAL
      177   STORAGE-TRAN-ERRS
       74   TBL-CAP-GAINS-PCT-FLG. . . . .  837
       72   TBL-ENDOWMT-AMT. . . . . . . .  634 668 673 676 799 809 840 847 852 879 882 946 947 952 955 968 969 974 977 989
                                            990 995 998 1012 1068 1095
       73   TBL-ENDOWMT-USUF-LMT . . . . .  885
       90   TBL-FUND-CAP-GAINS-PCT . . . .  841
       81   TBL-FUND-CTR . . . . . . . . .  83
       87   TBL-FUND-NBR . . . . . . . . .  84 694 1119 1140
       88   TBL-FUND-NME . . . . . . . . .  619 1161
       82   TBL-FUND-NTRY. . . . . . . . .  691 1137
       89   TBL-FUND-SHR-PRC . . . . . . .  1009 1096 1166
       71   TBL-INV-FUND-NBR . . . . . . .  618 695
       70   TBL-ORCH-NME . . . . . . . . .  633 712 804 833 878 1118
       68   TBL-ORCH-NTRY. . . . . . . . .  709
      129   TOT-ENDOWMT-AMT. . . . . . . .  M672 673 M951 952 M973 974 M994 995 M1067 1068 1183
      131   TOT-ENDOWMT-CHG-AMT. . . . . .  M1070 1071 1184
      360   TOT-LN1. . . . . . . . . . . .  1192
      376   TOT-LN2. . . . . . . . . . . .  1193
      133   TOT-NEW-ENDOWMT-AMT. . . . . .  M675 676 M954 955 M976 977 M997 998 M1073 1074 1185
      137   TOT-SHR-CHG. . . . . . . . . .  M1079 1080 1188
      139   TOT-SHR-NEW. . . . . . . . . .  M1082 1083 M1108 1109 1189
      135   TOT-SHR-STR. . . . . . . . . .  M1076 1077 M1105 1106 1187
      102   TRAN-CTR . . . . . . . . . . .  M681 M783 M816 M859 M929 M1148 1182 M1204
      167   TRAN-ERR . . . . . . . . . . .  661 778 965
       37   TRAN-FILE. . . . . . . . . . .  29 494 507 516 716
       41   TRAN-RECORD. . . . . . . . . .  712 753 759 765 771 777
      154   TRANOUT. . . . . . . . . . . .  920
       98   VARIABLES
      163   WITH-ERR . . . . . . . . . . .  649 766 986
      148   WITHD. . . . . . . . . . . . .  903
      181   ZERO-DOL-ERR . . . . . . . . .  945 967 988
      183   ZERO-DOL-ERR2. . . . . . . . .  639 645 651 657 663
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    28
0 Defined   Cross-reference of data names   References

0     179   ZERO-ERR . . . . . . . . . . .  944 966 987
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    29
0Context usage is indicated by the letter preceding a procedure-name reference.
 These letters and their meanings are:
     A = ALTER (procedure-name)
     D = GO TO (procedure-name) DEPENDING ON
     E = End of range of (PERFORM) through (procedure-name)
     G = GO TO (procedure-name)
     P = PERFORM (procedure-name)
     T = (ALTER) TO PROCEED TO (procedure-name)
     U = USE FOR DEBUGGING (procedure-name)

  Defined   Cross-reference of procedures   References

      540   0000-EXIT
      490   0000-MAIN
      546   0100-DATE-AND-TIME . . . . . .  P492
      553   0100-EXIT
      575   0110-EXIT
      558   0110-HEADERS-ONE . . . . . . .  P670 P752 P758 P764 P770 P776 P793 P830 P873
      596   0120-EXIT
      580   0120-HEADERS-TWO . . . . . . .  P1131
      611   0130-EXIT
      601   0130-PROCESS-CLEAR . . . . . .  P795 P831 P875
      623   0310-EXIT
      616   0310-FUND-FOUND. . . . . . . .  P696
      684   0320-EXIT
      628   0320-FUND-NOT-FOUND. . . . . .  P693
      699   0330-EXIT
      689   0330-SEARCH-FUND-TBL . . . . .  P713
      720   0400-EXIT
      704   0400-PROCESS-TRAN. . . . . . .  P511
      744   0410-EXIT
      725   0410-PROCESS-TRAN-TYPE . . . .  P621
      786   0420-EXIT
      749   0420-PROCESS-TRAN-TYPE-BAD . .  P711
      823   0500-EXIT
      791   0500-PROCESS-DEPOSIT . . . . .  P728
      866   0510-EXIT
      828   0510-PROCESS-REINVEST. . . . .  P731
      936   0520-EXIT
      871   0520-PROCESS-WITHDRAWAL. . . .  P734 P737 P740
      958   0530-EXIT
      941   0530-PROCESS-NOT-EXCHANGE. . .  P890
      979   0540-EXIT
      963   0540-PROCESS-NOT-TRANS . . . .  P893
     1000   0550-EXIT
      984   0550-PROCESS-NOT-WITH. . . . .  P887
     1037   0600-EXIT
     1005   0600-PROCESS-SHR-AMT . . . . .  P801 P849 P900 P908 P917
     1060   0610-EXIT
     1042   0610-PROCESS-NEG-AMT . . . . .  P901 P909 P918
     1085   0620-EXIT
     1065   0620-PROCESS-CALC-TOT. . . . .  P802 P850 P904 P912 P921
     1111   0630-EXIT
     1090   0630-PROCESS-BAD-SHR . . . . .  P949 P971 P992
     1124   0700-EXIT
     1116   0700-PROCESS-LE-FILE . . . . .  P820 P863 P933
     1154   0710-EXIT
     1129   0710-PROCESS-PRINT-LE. . . . .  P530
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    30
0 Defined   Cross-reference of procedures   References

0    1175   0720-EXIT
     1159   0720-PROCESS-LE-SHR. . . . . .  P1142
     1195   0800-EXIT
     1180   0800-PROCESS-TOTALS. . . . . .  P514
     1207   0900-EXIT
     1200   0900-PROCESS-RESET . . . . . .  P522
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    31
0 Defined   Cross-reference of programs     References

 EXTERNAL   BLDFUND. . . . . . . . . . . .  503
       19   ENDOWMT5
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       ENDOWMT5  Date 12/06/2020  Time 22:14:08   Page    32
0
          COPY/BASIS cross-reference of text-names, library names and dataset information

  Text-name Library   File name                                    Concat   ISPF statistics
  (Member)  (DDNAME)  (Dataset name)                               Level    Created         Changed

  FUNDSTBL  SYSLIB    KC02322.CSCI465.COPYLIB                        0     2020/11/15   2020/11/29 21:18:41
  LEREC     SYSLIB    KC02322.CSCI465.COPYLIB                        0     2020/11/16   2020/11/16 11:10:41
  ORCHTBL   SYSLIB    KC02322.CSCI465.COPYLIB                        0     2020/11/15   2020/12/02 11:48:08
  TRANREC   SYSLIB    KC02322.CSCI465.COPYLIB                        0     2020/11/15   2020/11/15 22:15:55

-* Statistics for COBOL program ENDOWMT5:
 *    Source records = 1208
 *    Data Division statements = 155
 *    Procedure Division statements = 316
 *    Generated COBOL statements = 0
 *    Program complexity factor = 328
0End of compilation 1,  program ENDOWMT5,  no statements flagged.
0Return code 0
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107                 Date 12/06/2020  Time 22:14:11   Page     1
0Invocation parameters:
  APOST
0Options in effect:
  NOADATA
    ADV
    AFP(NOVOLATILE)
    APOST
    ARCH(7)
    ARITH(COMPAT)
  NOAWO
  NOBLOCK0
    BUFSIZE(4096)
  NOCICS
    CODEPAGE(1140)
  NOCOMPILE(S)
  NOCOPYLOC
  NOCOPYRIGHT
  NOCURRENCY
    DATA(31)
    DBCS
  NODECK
  NODEFINE
  NODIAGTRUNC
    DISPSIGN(COMPAT)
  NODLL
  NODUMP
  NODYNAM
  NOEXIT
  NOEXPORTALL
  NOFASTSRT
    FLAG(I,I)
  NOFLAGSTD
    HGPR(PRESERVE)
  NOINITCHECK
    INLINE
    INTDATE(ANSI)
    LANGUAGE(EN)
    LINECOUNT(60)
  NOLIST
  NOMAP
    MAXPCF(100000)
  NOMDECK
  NONAME
    NSYMBOL(NATIONAL)
  NONUMBER
  NONUMCHECK
    NUMPROC(NOPFD)
    OBJECT
  NOOFFSET
    OPTIMIZE(0)
    OUTDD(SYSOUT)
  NOPARMCHECK
    PGMNAME(COMPAT)
    QUALIFY(COMPAT)
    RENT
    RMODE(AUTO)
  NORULES
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107                 Date 12/06/2020  Time 22:14:11   Page     2
0 NOSERVICE
    SEQUENCE
    SOURCE
    SPACE(1)
  NOSQL
    SQLCCSID
  NOSQLIMS
  NOSSRANGE
  NOSTGOPT
    SUPPRESS
  NOTERM
  NOTEST(NODWARF,NOSOURCE,NOSEPARATE)
  NOTHREAD
    TRUNC(STD)
  NOVBREF
    VLR(STANDARD)
    VSAMOPENFS(COMPAT)
  NOWORD
    XMLPARSE(XMLSS)
    XREF(FULL)
    ZONEDATA(PFD)
    ZWB
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       BLDFUND   Date 12/06/2020  Time 22:14:11   Page     3
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000001               ****************************************************************
   000002               *                                                              *
   000003               * PROGRAM NAME:  BLDFUND                                       *
   000004               *                                                              *
   000005               * FUNCTION:  THIS PROGRAM READS INPUT DATA TABLES AND CREATES  *
   000006               * A TABLE WITH THE DATA TO BE USED IN THE MAIN PROGRAM         *
   000007               *                                                              *
   000008               * INPUT:     FUND-FILE - THE INPUT DATA RECORDS READ IN FOR    *
   000009               *            CREATING THE TABLE                                *
   000010               *                                                              *
   000011               * OUTPUT:    NO OUTPUT. ONLY BUILDS A TABLE                    *
   000012               *                                                              *
   000013               * DONE STATICALLY                                              *
   000014               ****************************************************************
   000015
   000016                IDENTIFICATION DIVISION.
   000017
   000018                PROGRAM-ID.    BLDFUND.
   000019                AUTHOR.        CHARLES ALMS.
   000020                DATE-WRITTEN.  12/2/2020.
   000021                DATE-COMPILED. 12/06/20.
   000022
   000023                ENVIRONMENT DIVISION.
   000024
   000025                INPUT-OUTPUT SECTION.
   000026               ***************************************************************
   000027                FILE-CONTROL.
   000028                    SELECT FUND-FILE ASSIGN TO FUNDFLE.                                   35
   000029
   000030
   000031                DATA DIVISION.
   000032
   000033                FILE SECTION.
   000034
   000035                FD  FUND-FILE
   000036                    RECORDING MODE F.
   000037
   000038                01  FUND-RECORD.
   000039                    05  IN-FUND-NBR             PIC S9(3).
   000040                    05  IN-FUND-NME             PIC X(25).
   000041                    05  IN-FUND-SHR-PRC         PIC S9(3)V99.
   000042                    05  IN-FUND-CAP-GNS-PCT     OCCURS 4
   000043                                                INDEXED BY GAIN-NDX
   000044                                                PIC S9(3)V999.
   000045                    05  FILLER                  PIC X(23) VALUE SPACES.                   IMP
   000046
   000047                WORKING-STORAGE SECTION.
   000048
   000049                01  EOF-FLAG2                   PIC X VALUE 'N'.
   000050
   000051                01  CG-PCT-SUB                  PIC S9 BINARY SYNC.
   000052
   000053               ***************************************************************
   000054                LINKAGE SECTION.
   000055
   000056               ***************************************************************
   000057               * THIS WILL DECALRE THE FUND TABLE AND IN ASCENDING ORDER     *
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       BLDFUND   Date 12/06/2020  Time 22:14:11   Page     4
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000058               * BASED ON THE FUND-NBR. COPPIES REST FROM DECKER'S COPLIB    *
   000059               ***************************************************************
   000060                01  FUND-TBL.
   000061                    05  TBL-FUND-CTR            PIC S9(3) BINARY SYNC VALUE 0.
   000062                    05  TBL-FUND-NTRY           OCCURS 1 TO 100
   000063                                                DEPENDING ON TBL-FUND-CTR                 61
   000064                                                ASCENDING KEY TBL-FUND-NBR                67
   000065                                                INDEXED BY FUND-NDX.
   000066                COPY FUNDSTBL.
   000067C                       10  TBL-FUND-NBR           PIC S9(3)    BINARY SYNC.
   000068C                       10  TBL-FUND-NME           PIC X(25).
   000069C                       10  TBL-FUND-SHR-PRC       PIC S9(3)V99 PACKED-DECIMAL.
   000070C                       10  TBL-FUND-CAP-GAINS-PCT OCCURS 4
   000071C                                                  PIC S9(3)V999 PACKED-DECIMAL.
   000072
   000073               ***************************************************************
   000074                PROCEDURE DIVISION USING FUND-TBL.                                        60
   000075
   000076                0000-MAIN.
   000077
   000078                    OPEN INPUT FUND-FILE.                                                 35
   000079
   000080                    READ FUND-FILE                                                        35
   000081      1               AT END MOVE 'Y' TO EOF-FLAG2                                        49
   000082                    END-READ.
   000083
   000084                    PERFORM 0100-PROCESS-FUND-TBL VARYING FUND-NDX FROM 1 BY 1            99 65
   000085                      UNTIL FUND-NDX > 999                                                65
   000086                        OR EOF-FLAG2 = 'Y'.                                               49
   000087
   000088                    CLOSE FUND-FILE.                                                      35
   000089
   000090                    MOVE 0 TO RETURN-CODE.                                                IMP IMP
   000091
   000092                    GOBACK.
   000093
   000094                0000-EXIT. EXIT.
   000095
   000096               ***************************************************************
   000097               * PROCESSES THE FUND TBL                                      *
   000098               ***************************************************************
   000099                0100-PROCESS-FUND-TBL.
   000100
   000101                    ADD 1 TO TBL-FUND-CTR.                                                61
   000102
   000103                    MOVE IN-FUND-NBR TO TBL-FUND-NBR (FUND-NDX).                          39 67 65
   000104                    MOVE IN-FUND-NME TO TBL-FUND-NME (FUND-NDX).                          40 68 65
   000105                    MOVE IN-FUND-SHR-PRC TO TBL-FUND-SHR-PRC (FUND-NDX).                  41 69 65
   000106
   000107                    PERFORM VARYING CG-PCT-SUB FROM 1 BY 1                                51
   000108                      UNTIL CG-PCT-SUB > 4                                                51
   000109      1                 MOVE IN-FUND-CAP-GNS-PCT (CG-PCT-SUB) TO                          42 51
   000110      1                 TBL-FUND-CAP-GAINS-PCT  (FUND-NDX, CG-PCT-SUB)                    70 65 51
   000111                    END-PERFORM.
   000112
   000113                    READ FUND-FILE                                                        35
   000114      1               AT END MOVE 'Y' TO EOF-FLAG2                                        49
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       BLDFUND   Date 12/06/2020  Time 22:14:11   Page     5
   LineID  PL SL  ----+-*A-1-B--+----2----+----3----+----4----+----5----+----6----+----7-|--+----8 Map and Cross Reference
0  000115                    END-READ.
   000116
   000117                0100-EXIT. EXIT.
   000118
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       BLDFUND   Date 12/06/2020  Time 22:14:11   Page     6
0An "M" preceding a data-name reference indicates that the data-name is modified by this reference.

  Defined   Cross-reference of data names   References

       51   CG-PCT-SUB . . . . . . . . . .  M107 108 109 110
       49   EOF-FLAG2. . . . . . . . . . .  M81 86 M114
       35   FUND-FILE. . . . . . . . . . .  28 78 80 88 113
       65   FUND-NDX . . . . . . . . . . .  M84 85 103 104 105 110
       38   FUND-RECORD
       60   FUND-TBL . . . . . . . . . . .  74
       43   GAIN-NDX
       42   IN-FUND-CAP-GNS-PCT. . . . . .  109
       39   IN-FUND-NBR. . . . . . . . . .  103
       40   IN-FUND-NME. . . . . . . . . .  104
       41   IN-FUND-SHR-PRC. . . . . . . .  105
        0   RETURN-CODE. . . . . . . . . .  90 M90
       70   TBL-FUND-CAP-GAINS-PCT . . . .  M110
       61   TBL-FUND-CTR . . . . . . . . .  63 M101
       67   TBL-FUND-NBR . . . . . . . . .  64 M103
       68   TBL-FUND-NME . . . . . . . . .  M104
       62   TBL-FUND-NTRY
       69   TBL-FUND-SHR-PRC . . . . . . .  M105
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       BLDFUND   Date 12/06/2020  Time 22:14:11   Page     7
0Context usage is indicated by the letter preceding a procedure-name reference.
 These letters and their meanings are:
     A = ALTER (procedure-name)
     D = GO TO (procedure-name) DEPENDING ON
     E = End of range of (PERFORM) through (procedure-name)
     G = GO TO (procedure-name)
     P = PERFORM (procedure-name)
     T = (ALTER) TO PROCEED TO (procedure-name)
     U = USE FOR DEBUGGING (procedure-name)

  Defined   Cross-reference of procedures   References

       94   0000-EXIT
       76   0000-MAIN
      117   0100-EXIT
       99   0100-PROCESS-FUND-TBL. . . . .  P84
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       BLDFUND   Date 12/06/2020  Time 22:14:11   Page     8
0 Defined   Cross-reference of programs     References

       18   BLDFUND
1PP 5655-EC6 IBM Enterprise COBOL for z/OS  6.2.0 P190107       BLDFUND   Date 12/06/2020  Time 22:14:11   Page     9
0
          COPY/BASIS cross-reference of text-names, library names and dataset information

  Text-name Library   File name                                    Concat   ISPF statistics
  (Member)  (DDNAME)  (Dataset name)                               Level    Created         Changed

  FUNDSTBL  SYSLIB    KC02322.CSCI465.COPYLIB                        0     2020/11/15   2020/11/29 21:18:41

-* Statistics for COBOL program BLDFUND:
 *    Source records = 118
 *    Data Division statements = 14
 *    Procedure Division statements = 17
 *    Generated COBOL statements = 0
 *    Program complexity factor = 18
0End of compilation 1,  program BLDFUND,  no statements flagged.
0Return code 0
1z/OS V2 R3 BINDER     22:14:13 SUNDAY DECEMBER  6, 2020
 BATCH EMULATOR  JOB(KC03I4CA) STEP(JSTEP04 ) PGM= HEWL
 IEW2322I 1220  1               ENTRY ENDOWMT5
 IEW2322I 1220  2               MODE AMODE(24)



                                 *** O P E R A T I O N   S U M M A R Y   R E P O R T ***

1PROCESSING OPTIONS:

    ALIASES             NO
    ALIGN2              NO
    AMODE                24
    CALL                YES
    CASE                UPPER
    COMPAT              UNSPECIFIED
    COMPRESS            AUTO
    DCBS                NO
    DYNAM               NO
    EXTATTR             UNSPECIFIED
    EXITS:              NONE
    FILL                NONE
    GID                 UNSPECIFIED
    HOBSET              NO
    INFO                NO
    LET                 04
    LINECT              060
    LIST                SUMMARY
    LISTPRIV            NO
    LONGPARM            NO
    MAP                 NO
    MAXBLK              032760
    MODMAP              NO
    MSGLEVEL            00
    OVLY                NO
    PRINT               YES
    RES                 NO
    REUSABILITY         UNSPECIFIED
    RMODE               UNSPECIFIED
    RMODEX              NO
    SIGN                NO
    STORENX             NOREPLACE
    STRIPCL             NO
    STRIPSEC            NO
    SYMTRACE
    TERM                NO
    TRAP                ON
    UID                 UNSPECIFIED
    UPCASE              NO
    WKSPACE             000000K,000000K
    XCAL                NO
    XREF                NO
    ***END OF OPTIONS***




1SAVE OPERATION SUMMARY:

    MEMBER NAME         ENDOWMT5
    LOAD LIBRARY        KC03I4C.CSCI465.LOADLIB
    PROGRAM TYPE        PROGRAM OBJECT(FORMAT 3)
    VOLUME SERIAL       KCTR43
    DISPOSITION         REPLACED
    TIME OF SAVE        22.14.14  DEC  6, 2020


1SAVE MODULE ATTRIBUTES:

    AC                  000
    AMODE                24
    COMPRESSION         NONE
    DC                  NO
    EDITABLE            YES
    EXCEEDS 16MB        NO
    EXECUTABLE          YES
    LONGPARM            NO
    MIGRATABLE          NO
    OL                  NO
    OVLY                NO
    PACK,PRIME          NO,NO
    PAGE ALIGN          NO
    REFR                NO
    RENT                NO
    REUS                NO
    RMODE                24
    SCTR                NO
    SIGN                NO
    SSI
    SYM GENERATED       NO
    TEST                NO
    XPLINK              NO
    MODULE SIZE (HEX)   00006204
    DASD SIZE (HEX)     00011000


1 ENTRY POINT AND ALIAS SUMMARY:

  NAME:            ENTRY TYPE AMODE C_OFFSET CLASS NAME        STATUS

  ENDOWMT5          MAIN_EP      24 00000000 C_CODE

                          *** E N D   O F   O P E R A T I O N   S U M M A R Y   R E P O R T ***




1z/OS V2 R3 BINDER     22:14:13 SUNDAY DECEMBER  6, 2020
 BATCH EMULATOR  JOB(KC03I4CA) STEP(JSTEP04 ) PGM= HEWL
 IEW2008I 0F03 PROCESSING COMPLETED.  RETURN CODE =  0.



1----------------------
 MESSAGE SUMMARY REPORT
 ----------------------
  TERMINAL MESSAGES      (SEVERITY = 16)
  NONE

  SEVERE MESSAGES        (SEVERITY = 12)
  NONE

  ERROR MESSAGES         (SEVERITY = 08)
  NONE

  WARNING MESSAGES       (SEVERITY = 04)
  NONE

  INFORMATIONAL MESSAGES (SEVERITY = 00)
  2008  2322


  **** END OF MESSAGE SUMMARY REPORT ****

1                                         High Level Assembler Option Summary                   (PTF UI61337)   Page    1
-                                                                                            HLASM R6.0  2020/12/06 22.14
0  No Overriding ASMAOPT Parameters
   Overriding Parameters-  ASA
   No Process Statements


   Options for this Assembly
0                    NOADATA
                       ALIGN
 3 PARM/OPTION         ASA
                       BATCH
                       CODEPAGE(047C)
                     NOCOMPAT
                     NODATAMAP
                     NODBCS
                     NODECK
                       DXREF
                       ESD
                     NOEXIT
                       FAIL(NOMSG,NOMNOTE,MAXERRS(500))
                       FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,NOLONGER,NOPAGE0,PUSH,RECORD,NOSIGNED,NOSUBSTR,NOTRUNC,USING0)
                     NOFOLD
                     NOGOFF
                     NOINFO
                       ILMA
                       LANGUAGE(EN)
                     NOLIBMAC
                       LINECOUNT(60)
                       LIST(121)
                       MACHINE(,NOLIST)
                       MXREF(SOURCE)
                       OBJECT
                       OPTABLE(UNI,NOLIST)
                     NOPCONTROL
                     NOPESTOP
                     NOPROFILE
                     NORA2
                     NORENT
                       RLD
                       RXREF
                       SECTALGN(8)
                       SIZE(MAX)
                     NOSUPRWARN
                       SYSPARM()
                     NOTERM
                     NOTEST
                       THREAD
                     NOTRANSLATE
                       TYPECHECK(MAGNITUDE,REGISTER)
                       USING(NOLIMIT,MAP,WARN(15))
                     NOWORKFILE
                       XREF(SHORT,UNREFS)

   No Overriding DD Names
1                                              External Symbol Dictionary                                       Page    2
-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2020/12/06 22.14
0BLDORCH   SD 00000001 00000000 000001E0             00
1                                                                                                               Page    3
   Active Usings: None
0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2020/12/06 22.14
0                                      1          PRINT  NOGEN                MACRO CALL SUPPRESSION
                                       2 **********************************************************************
                                       3 *                                                                    *
                                       4 * PROGRAM:    BLDORCH                                                *
                                       5 * AUTHOR:     CHARLES ALMS                                           *
                                       6 * DATE:       11/30/2020                                             *
                                       7 *                                                                    *
                                       8 * FUNCTION:  THIS PROGRAM WILL CREATE A DSECT FOR THE ORCH TABLE     *
                                       9 *                                                                    *
                                      10 * INPUT: PASS IN THE STARTING POSITION OF THE TABLE AND A PACKED     *
                                      11 *        DECIMMAL FOR THE COUNTER                                    *
                                      12 *                                                                    *
                                      13 * OUTPUT: RETURNS THE TABLE AND EOF FLAG VALUE                       *
                                      14 * DONE DYNAMICALLY                                                   *
                                      15 **********************************************************************
 000000                00000 0003C    16 $ORCHTBL DSECT
 000000                               17 $TBLONME DS    CL45
 00002D                               18 $TBLFNBR DS    PL2
 00002F                               19 $TBLEAMT DS    PL6
 000035                               20 $TBLULMT DS    PL6
 00003B                               21 $TBLCFLG DS    PL1
                                      22 *
 000000                00000 001E0    23 BLDORCH  CSECT
 000000 90EC D00C            0000C    24          STM   14,12,12(13)          SAVE CALLER'S REGS
 000004 18CF                          25          LR    12,15                 SET R12 TO R15
                  R:C  00000          26          USING BLDORCH,12            ESTABLISH R12 AS 1ST BASE REG
 000006 41E0 C0E0            000E0    27          LA    14,REGS               R14 -> CURRENT SAVE AREA
 00000A 50D0 E004            00004    28          ST    13,4(,14)             SAVE CALLER'S SAVE AREA ADDR
 00000E 50E0 E008            00008    29          ST    14,8(,14)             SAVE CURRENT SAVE AREA ADDR
 000012 18DE                          30          LR    13,14                 R13 -> CURRENT SAVE AREA
                                      31 *
 000014 9823 1000            00000    32          LM    2,3,0(1)              RECEIVE PARAMETERS
                                      33 *                                    R2 = ORCH-TBLE
                                      34 *                                    R3 = COUNTER
 000018 4D10 C020            00020    35          OPEN  (ORCHDCB,(INPUT))     OPEN INPUT FILE
 000022 12FF                          42          LTR   15,15                 CHECK FOR SUCCESSFUL OPEN
 000024 4780 C038            00038    43          BZ    OPENOK                BRANCH IF SUCCESSFUL TO OPENOK
 000028 4110 00DE            000DE    44          ABEND 222,DUMP              ABEND IF OPEN FAILS & DISPLAY 222
                                      54 *
                  R:2  00000          55          USING $ORCHTBL,2
                                      56 *
 000038 4110 C180            00180    57 OPENOK   GET   ORCHDCB,RECORD
                                      68 *
 000048 95E8 C178      00178          69 LOOP1    CLI   EOFFLAG,C'Y'          CHECK FOR END OF INPUT DATA
 00004C 4780 C08C            0008C    70          BE    ENDLOOP1              BRANCH IF EOF
                                      71 *
 000050 D22C 2000 C128 00000 00128    72          MVC   $TBLONME(45),OCHNME
 000056 F212 202D C155 0002D 00155    73          PACK  $TBLFNBR(2),FUNDNBR(3)
 00005C F25A 202F C158 0002F 00158    74          PACK  $TBLEAMT(6),ENDOAMT(11)
 000062 F25A 2035 C163 00035 00163    75          PACK  $TBLULMT(6),ENDLMIT(11)
 000068 F200 203B C16E 0003B 0016E    76          PACK  $TBLCFLG(1),CAPFLAG(1)
                                      77 *
 00006E FA10 3000 C0A8 00000 000A8    78          AP    0(2,3),=PL1'1'        INCREMENT THE TABLE COUNTER
                                      79 *
 000074 4120 203C            0003C    80          LA    2,60(,2)              MOVE TO NEXT ENTRY ADDRESS
1                                                                                                               Page    4
   Active Usings: $ORCHTBL,R2  BLDORCH,R12
0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2020/12/06 22.14
0                                     81 *
 000078 4110 C180            00180    82          GET   ORCHDCB,RECORD        GET THE NEXT ENTRY
 000088 47F0 C048            00048    93          B     LOOP1                 BRANCH BACK TO TOP OF LOOP
                                      94 *
 00008C 4D10 C094            00094    95 ENDLOOP1 CLOSE (ORCHDCB)             CLOSE THE INPUT
                                     102          DROP  2                     DROP R2
                                     103 *
 000096 1BFF                         104          SR    15,15                 SET RC TO 0
 000098 58D0 D004            00004   105          L     13,4(,13)             R13 -> CALLER'S SAVE AREA
 00009C 58E0 D00C            0000C   106          L     14,12(,13)            RESTORE R14
 0000A0 980C D014            00014   107          LM    0,12,20(13)           RESTORE R0 THROUGH R12
                                     108 *
 0000A4 07FE                         109          BR    14                    RETURN TO CALLER
                                     110 *
 0000A8                              111          LTORG                       LTORG TO ORGANIZE LITERALS
 0000A8 1C                           112                =PL1'1'
                                     113 *
 0000A9                000A9 000C0   114          ORG   BLDORCH+((*-BLDORCH+31)/32)*32
 0000C0 C8C5D9C540C9E240             115          DC    C'HERE IS THE STORAGE FOR: BLDORCH'
                                     116 *
 0000E0 FFFFFFFFFFFFFFFF             117 REGS     DC    18F'-1'
                                     118 *
 000128                              119 RECORD   DS    0H                    INPUT RECORD
                                     120 *
                                     121 * STORAGE FOR THE TABLE VALUES
                                     122 *
 000128                              123 OCHNME   DS    CL45
 000155                              124 FUNDNBR  DS    ZL3
 000158                              125 ENDOAMT  DS    ZL11
 000163                              126 ENDLMIT  DS    ZL11
 00016E                              127 CAPFLAG  DS    ZL1
 00016F                              128          DS    CL9
                                     129 *
                                     130 * EOFFLAG WILL BE LIKE THE COBOL EOF-FLAG
                                     131 * RETURNF WILL BE THE RETURNING VALUE OF THE FLAG
                                     132 *
 000178 D5                           133 EOFFLAG  DC    C'N'                  EOFFLAG FOR INPUT FILE
                                     134 *
 000179 00
 00017A 92E8 C178      00178         135 RETURNF  MVI   EOFFLAG,C'Y'          SET EOFFLAG TO Y
 00017E 07FE                         136          BR    14                    BRANCH TO STMT FOLLOWING GET
                                     137 *
                                     138 * ORCHDCB READS ORCHFLE
                                     139 *
                                     140 ORCHDCB  DCB   DDNAME=ORCHFLE,                                         X
                                                        DEVD=DA,                                                X
                                                        DSORG=PS,                                               X
                                                        MACRF=GM,                                               X
                                                        RECFM=FB,                                               X
                                                        LRECL=80,                                               X
 000180 0000000000000000                                EODAD=RETURNF
                                     182 *
 000000                              183          END   BLDORCH
1                                                 Relocation Dictionary                                         Page    5
-   Pos.Id   Rel.Id   Address  Type    Length  Action                                        HLASM R6.0  2020/12/06 22.14
0  00000001 00000001 0000001D   A         3       +
   00000001 00000001 00000091   A         3       +
   00000001 00000001 000001A1   A         3       +
1                               Ordinary Symbol and Literal Cross Reference                                     Page    6
-Symbol   Length   Value     Id    R Type Asm  Program   Defn References                     HLASM R6.0  2020/12/06 22.14
0$ORCHTBL      1 00000000 FFFFFFFF     J                   16   55U
 $TBLCFLG      1 0000003B FFFFFFFF     P  P                21   76M
 $TBLEAMT      6 0000002F FFFFFFFF     P  P                19   74M
 $TBLFNBR      2 0000002D FFFFFFFF     P  P                18   73M
 $TBLONME     45 00000000 FFFFFFFF     C  C                17   72M
 $TBLULMT      6 00000035 FFFFFFFF     P  P                20   75M
 BLDORCH       1 00000000 00000001     J                   23   26U  114   114   183
 CAPFLAG       1 0000016E 00000001     Z  Z               127   76
 ENDLMIT      11 00000163 00000001     Z  Z               126   75
 ENDLOOP1      4 0000008C 00000001     I                   98   70B
 ENDOAMT      11 00000158 00000001     Z  Z               125   74
 EOFFLAG       1 00000178 00000001     C  C               133   69   135M
 FUNDNBR       3 00000155 00000001     Z  Z               124   73
 LOOP1         4 00000048 00000001     I                   69   93B
 OCHNME       45 00000128 00000001     C  C               123   72
 OPENOK        4 00000038 00000001     I                   63   43B
 ORCHDCB       4 00000180 00000001     F  F               145   40    63    88   100
 RECORD        2 00000128 00000001     H  H               119   64    89
 REGS          4 000000E0 00000001     F  F               117   27
 RETURNF       4 0000017A 00000001     I                  135  157
 =PL1'1'       1 000000A8 00000001     P                  112   78
1                                          Macro and Copy Code Source Summary                                   Page    7
- Con Source                                        Volume    Members                        HLASM R6.0  2020/12/06 22.14
0  L1 SYS1.MACLIB                                   VTMVSC    ABEND    CLOSE    DCB      GET      IHBINNRA IHBINNRR
                                                              IHB01    OPEN     SYSSTATE
1                                                Dsect Cross Reference                                          Page    8
-Dsect     Length      Id       Defn                                                         HLASM R6.0  2020/12/06 22.14
0$ORCHTBL 0000003C  FFFFFFFF      16
1                                                      Using Map                                                Page    9
-                                                                                            HLASM R6.0  2020/12/06 22.14
   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
           Count      Id           Type          Value    Range     Id        Disp    Stmt
0    26  00000006  00000001 USING  ORDINARY    00000000 00001000 00000001  12 00180    135 BLDORCH,12
     55  00000038  00000001 USING  ORDINARY    00000000 00001000 FFFFFFFF   2 0003B     76 $ORCHTBL,2
    102  00000096  00000001 DROP                                            2              2
1                                   General Purpose Register Cross Reference                                    Page   10
- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2020/12/06 22.14
0    0(0)      24    50M   51M   52    64M   89M  107M
     1(1)      24    32    38M   49M   52M   63M   66    88M   91    98M  107M
     2(2)      24    32M   55U   80M   80   102D  107M
     3(3)      24    32M   78   107M
     4(4)      24   107M
     5(5)      24   107M
     6(6)      24   107M
     7(7)      24   107M
     8(8)      24   107M
     9(9)      24   107M
    10(A)      24   107M
    11(B)      24   107M
    12(C)      24    25M   26U  107M
    13(D)      24    28    30M  105M  105   106   107
    14(E)      24    27M   28    29    29    30    67M   92M  106M  109B  136B
    15(F)      24    25    42M   42    65M   65    66M   67B   90M   90    91M   92B  104M  104
1                                  Diagnostic Cross Reference and Assembler Summary                             Page   11
-                                                                                            HLASM R6.0  2020/12/06 22.14
0     No Statements Flagged in this Assembly
 HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UI61337
0SYSTEM: z/OS 02.03.00              JOBNAME: KC03I4CA    STEPNAME: JSTEP05    PROCSTEP: (NOPROC)
0Unicode Module:   ASMA047C   From Page     1148   To Page    17584           ECECP: International 1
 Data Sets Allocated for this Assembly
  Con DDname   Data Set Name                                Volume  Member
   P1 SYSIN    KC03I4C.KC03I4CA.JOB01389.D0000105.?
   L1 SYSLIB   SYS1.MACLIB                                  VTMVSC
      SYSLIN   SYS20341.T221402.RA000.KC03I4CA.OBJMOD3.H01  TEMP00
      SYSPRINT KC03I4C.KC03I4CA.JOB01389.D0000113.?

   26756K allocated to Buffer Pool       Storage required     508K
     106 Primary Input Records Read         3629 Library Records Read                  0 Work File Reads
       0 ASMAOPT Records Read                251 Primary Print Records Written         0 Work File Writes
      11 Object Records Written                0 ADATA Records Written
0Assembly Start Time: 22.14.14 Stop Time: 22.14.14 Processor Time: 00.00.00.0035
 Return Code 000
1z/OS V2 R3 BINDER     22:14:13 SUNDAY DECEMBER  6, 2020
 BATCH EMULATOR  JOB(KC03I4CA) STEP(JSTEP06 ) PGM= HEWL



                                 *** O P E R A T I O N   S U M M A R Y   R E P O R T ***

1PROCESSING OPTIONS:

    ALIASES             NO
    ALIGN2              NO
    AMODE               UNSPECIFIED
    CALL                YES
    CASE                UPPER
    COMPAT              UNSPECIFIED
    COMPRESS            AUTO
    DCBS                NO
    DYNAM               NO
    EXTATTR             UNSPECIFIED
    EXITS:              NONE
    FILL                NONE
    GID                 UNSPECIFIED
    HOBSET              NO
    INFO                NO
    LET                 04
    LINECT              060
    LIST                SUMMARY
    LISTPRIV            NO
    LONGPARM            NO
    MAP                 NO
    MAXBLK              032760
    MODMAP              NO
    MSGLEVEL            00
    OVLY                NO
    PRINT               YES
    RES                 NO
    REUSABILITY         UNSPECIFIED
    RMODE               UNSPECIFIED
    RMODEX              NO
    SIGN                NO
    STORENX             NOREPLACE
    STRIPCL             NO
    STRIPSEC            NO
    SYMTRACE
    TERM                NO
    TRAP                ON
    UID                 UNSPECIFIED
    UPCASE              NO
    WKSPACE             000000K,000000K
    XCAL                NO
    XREF                NO
    ***END OF OPTIONS***




1SAVE OPERATION SUMMARY:

    MEMBER NAME         BLDORCH
    LOAD LIBRARY        KC03I4C.CSCI465.LOADLIB
    PROGRAM TYPE        PROGRAM OBJECT(FORMAT 2)
    VOLUME SERIAL       KCTR43
    DISPOSITION         REPLACED
    TIME OF SAVE        22.14.14  DEC  6, 2020


1SAVE MODULE ATTRIBUTES:

    AC                  000
    AMODE                24
    COMPRESSION         NONE
    DC                  NO
    EDITABLE            YES
    EXCEEDS 16MB        NO
    EXECUTABLE          YES
    LONGPARM            NO
    MIGRATABLE          YES
    OL                  NO
    OVLY                NO
    PACK,PRIME          NO,NO
    PAGE ALIGN          NO
    REFR                NO
    RENT                NO
    REUS                NO
    RMODE                24
    SCTR                NO
    SIGN                NO
    SSI
    SYM GENERATED       NO
    TEST                NO
    XPLINK              NO
    MODULE SIZE (HEX)   000001E0
    DASD SIZE (HEX)     00001000


1 ENTRY POINT AND ALIAS SUMMARY:

  NAME:            ENTRY TYPE AMODE C_OFFSET CLASS NAME        STATUS

  BLDORCH           MAIN_EP      24 00000000 B_TEXT

                          *** E N D   O F   O P E R A T I O N   S U M M A R Y   R E P O R T ***




1z/OS V2 R3 BINDER     22:14:13 SUNDAY DECEMBER  6, 2020
 BATCH EMULATOR  JOB(KC03I4CA) STEP(JSTEP06 ) PGM= HEWL
 IEW2008I 0F03 PROCESSING COMPLETED.  RETURN CODE =  0.



1----------------------
 MESSAGE SUMMARY REPORT
 ----------------------
  TERMINAL MESSAGES      (SEVERITY = 16)
  NONE

  SEVERE MESSAGES        (SEVERITY = 12)
  NONE

  ERROR MESSAGES         (SEVERITY = 08)
  NONE

  WARNING MESSAGES       (SEVERITY = 04)
  NONE

  INFORMATIONAL MESSAGES (SEVERITY = 00)
  2008


  **** END OF MESSAGE SUMMARY REPORT ****

1                                         High Level Assembler Option Summary                   (PTF UI61337)   Page    1
-                                                                                            HLASM R6.0  2020/12/06 22.14
0  No Overriding ASMAOPT Parameters
   Overriding Parameters-  ASA,LIST
   No Process Statements


   Options for this Assembly
0                    NOADATA
                       ALIGN
 3 PARM/OPTION         ASA
                       BATCH
                       CODEPAGE(047C)
                     NOCOMPAT
                     NODATAMAP
                     NODBCS
                     NODECK
                       DXREF
                       ESD
                     NOEXIT
                       FAIL(NOMSG,NOMNOTE,MAXERRS(500))
                       FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,NOLONGER,NOPAGE0,PUSH,RECORD,NOSIGNED,NOSUBSTR,NOTRUNC,USING0)
                     NOFOLD
                     NOGOFF
                     NOINFO
                       ILMA
                       LANGUAGE(EN)
                     NOLIBMAC
                       LINECOUNT(60)
 3 PARM/OPTION         LIST(121)
                       MACHINE(,NOLIST)
                       MXREF(SOURCE)
                       OBJECT
                       OPTABLE(UNI,NOLIST)
                     NOPCONTROL
                     NOPESTOP
                     NOPROFILE
                     NORA2
                     NORENT
                       RLD
                       RXREF
                       SECTALGN(8)
                       SIZE(MAX)
                     NOSUPRWARN
                       SYSPARM()
                     NOTERM
                     NOTEST
                       THREAD
                     NOTRANSLATE
                       TYPECHECK(MAGNITUDE,REGISTER)
                       USING(NOLIMIT,MAP,WARN(15))
                     NOWORKFILE
                       XREF(SHORT,UNREFS)

   No Overriding DD Names
1                                              External Symbol Dictionary                                       Page    2
-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2020/12/06 22.14
0CALCSHRS  SD 00000001 00000000 000000B7             00
1                                                                                                               Page    3
   Active Usings: None
0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2020/12/06 22.14
0                                      1          PRINT  NOGEN                MACRO CALL SUPPRESSION
                                       2 **********************************************************************
                                       3 *                                                                    *
                                       4 * PROGRAM:    CALCSHRS                                               *
                                       5 * AUTHOR:     CHARLES ALMS                                           *
                                       6 * DATE:       11/30/2020                                             *
                                       7 *                                                                    *
                                       8 * FUNCTION:  THIS PROGRAM WILL CALCULATE THE SHARE PRICE             *
                                       9 *                                                                    *
                                      10 * INPUT: THE ENDOWMT AMT, SHARE PRICE, AND A RETURN VALUE            *
                                      11 *                                                                    *
                                      12 * OUTPUT: CALCULATES THE SHARE AMOUNT BY DOING END-AMT/SHR-PRC       *
                                      13 *         PASSES BACK THE RETURN VALUE WITH THE COMPUTED AMOUNT      *
                                      14 * DONE DYNAMICALLY                                                   *
                                      15 **********************************************************************
                                      16 *
 000000                00000 000B7    17 CALCSHRS CSECT
 000000 90EC D00C            0000C    18          STM   14,12,12(13)          SAVE CALLER'S REGS
 000004 18CF                          19          LR    12,15                 SET R12 TO R15
                  R:C  00000          20          USING CALCSHRS,12           ESTABLISH R12 AS 1ST BASE REG
 000006 41E0 C064            00064    21          LA    14,REGS               R14 -> CURRENT SAVE AREA
 00000A 50D0 E004            00004    22          ST    13,4(,14)             SAVE CALLER'S SAVE AREA ADDR
 00000E 50E0 D008            00008    23          ST    14,8(,13)             SAVE CURRENT SAVE AREA ADDR
 000012 18DE                          24          LR    13,14                 R13 -> CURRENT SAVE AREA
                                      25 *
 000014 9824 1000            00000    26          LM    2,4,0(1)              RECEIVE PARAMETERS
                                      27 *                                    R2 = AMOUNT
                                      28 *                                    R3 = PRICE
                                      29 *                                    R4 = RETURN VAL
                                      30 *
 000018 F8A5 C0AC 2000 000AC 00000    31          ZAP   CALC(11),0(6,2)       ZAP THE AMT INTO CALC
 00001E F0A0 C0AC 0003 000AC 00003    32          SRP   CALC(11),3,0           ROUND
 000024 FDA2 C0AC 3000 000AC 00000    33          DP    CALC(11),0(3,3)       DIVIDE AMT BY SHR PRICE
 00002A F877 4000 C0AC 00000 000AC    34          ZAP   0(8,4),CALC(8)        RETURN VAL = DIVIDED AMOUNT
                                      35 *
 000030 1BFF                          36          SR    15,15                 SET RC TO 0
 000032 58D0 D004            00004    37          L     13,4(,13)             R13 -> CALLER'S SAVE AREA
 000036 58E0 D00C            0000C    38          L     14,12(,13)            RESTORE R14
 00003A 980C D014            00014    39          LM    0,12,20(13)           RESTORE R0 THROUGH R12
                                      40 *
 00003E 07FE                          41          BR    14                    RETURN TO CALLER
                                      42 *
 000040                               43          LTORG                       LTORG TO ORGANIZE LITERALS
                                      44 *
 000040                00040 00040    45          ORG   CALCSHRS+((*-CALCSHRS+31)/32)*32
 000040 C8C5D9C540C9E240              46          DC    C'HERE IS THE STORAGE FOR: CALCSHRS'
                                      47 *
 000061 000000
 000064 0000000000000000              48 REGS     DC    18F'0'                MAINREGS FOR STANDARD LINKAGE
                                      49 *
 0000AC 0000000000000000              50 CALC     DC    PL11'0'               USED FOR CALC SHARE PRICE
                                      51 *
 000000                               52          END   CALCSHRS
1                               Ordinary Symbol and Literal Cross Reference                                     Page    4
-Symbol   Length   Value     Id    R Type Asm  Program   Defn References                     HLASM R6.0  2020/12/06 22.14
0CALC         11 000000AC 00000001     P  P                50   31M   32M   33M   34
 CALCSHRS      1 00000000 00000001     J                   17   20U   45    45    52
 REGS          4 00000064 00000001     F  F                48   21
1                                                      Using Map                                                Page    5
-                                                                                            HLASM R6.0  2020/12/06 22.14
   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
           Count      Id           Type          Value    Range     Id        Disp    Stmt
0    20  00000006  00000001 USING  ORDINARY    00000000 00001000 00000001  12 000AC     34 CALCSHRS,12
1                                   General Purpose Register Cross Reference                                    Page    6
- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2020/12/06 22.14
0    0(0)      18    39M
     1(1)      18    26    39M
     2(2)      18    26M   31    39M
     3(3)      18    26M   33    39M
     4(4)      18    26M   34    39M
     5(5)      18    39M
     6(6)      18    39M
     7(7)      18    39M
     8(8)      18    39M
     9(9)      18    39M
    10(A)      18    39M
    11(B)      18    39M
    12(C)      18    19M   20U   39M
    13(D)      18    22    23    24M   37M   37    38    39
    14(E)      18    21M   22    23    24    38M   41B
    15(F)      18    19    36M   36
1                                  Diagnostic Cross Reference and Assembler Summary                             Page    7
-                                                                                            HLASM R6.0  2020/12/06 22.14
0     No Statements Flagged in this Assembly
 HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UI61337
0SYSTEM: z/OS 02.03.00              JOBNAME: KC03I4CA    STEPNAME: JSTEP07    PROCSTEP: (NOPROC)
0Unicode Module:   ASMA047C   From Page     1148   To Page    17584           ECECP: International 1
 Data Sets Allocated for this Assembly
  Con DDname   Data Set Name                                Volume  Member
   P1 SYSIN    KC03I4C.KC03I4CA.JOB01389.D0000106.?
   L1 SYSLIB   SYS1.MACLIB                                  VTMVSC
      SYSLIN   SYS20341.T221402.RA000.KC03I4CA.OBJMOD4.H01  TEMP00
      SYSPRINT KC03I4C.KC03I4CA.JOB01389.D0000115.?

   26756K allocated to Buffer Pool       Storage required     200K
      52 Primary Input Records Read            0 Library Records Read                  0 Work File Reads
       0 ASMAOPT Records Read                161 Primary Print Records Written         0 Work File Writes
       6 Object Records Written                0 ADATA Records Written
0Assembly Start Time: 22.14.15 Stop Time: 22.14.15 Processor Time: 00.00.00.0002
 Return Code 000
1z/OS V2 R3 BINDER     22:14:14 SUNDAY DECEMBER  6, 2020
 BATCH EMULATOR  JOB(KC03I4CA) STEP(JSTEP08 ) PGM= HEWL



                                 *** O P E R A T I O N   S U M M A R Y   R E P O R T ***

1PROCESSING OPTIONS:

    ALIASES             NO
    ALIGN2              NO
    AMODE               UNSPECIFIED
    CALL                YES
    CASE                UPPER
    COMPAT              UNSPECIFIED
    COMPRESS            AUTO
    DCBS                NO
    DYNAM               NO
    EXTATTR             UNSPECIFIED
    EXITS:              NONE
    FILL                NONE
    GID                 UNSPECIFIED
    HOBSET              NO
    INFO                NO
    LET                 04
    LINECT              060
    LIST                SUMMARY
    LISTPRIV            NO
    LONGPARM            NO
    MAP                 NO
    MAXBLK              032760
    MODMAP              NO
    MSGLEVEL            00
    OVLY                NO
    PRINT               YES
    RES                 NO
    REUSABILITY         UNSPECIFIED
    RMODE               UNSPECIFIED
    RMODEX              NO
    SIGN                NO
    STORENX             NOREPLACE
    STRIPCL             NO
    STRIPSEC            NO
    SYMTRACE
    TERM                NO
    TRAP                ON
    UID                 UNSPECIFIED
    UPCASE              NO
    WKSPACE             000000K,000000K
    XCAL                NO
    XREF                NO
    ***END OF OPTIONS***




1SAVE OPERATION SUMMARY:

    MEMBER NAME         CALCSHRS
    LOAD LIBRARY        KC03I4C.CSCI465.LOADLIB
    PROGRAM TYPE        PROGRAM OBJECT(FORMAT 2)
    VOLUME SERIAL       KCTR43
    DISPOSITION         REPLACED
    TIME OF SAVE        22.14.15  DEC  6, 2020


1SAVE MODULE ATTRIBUTES:

    AC                  000
    AMODE                24
    COMPRESSION         NONE
    DC                  NO
    EDITABLE            YES
    EXCEEDS 16MB        NO
    EXECUTABLE          YES
    LONGPARM            NO
    MIGRATABLE          YES
    OL                  NO
    OVLY                NO
    PACK,PRIME          NO,NO
    PAGE ALIGN          NO
    REFR                NO
    RENT                NO
    REUS                NO
    RMODE                24
    SCTR                NO
    SIGN                NO
    SSI
    SYM GENERATED       NO
    TEST                NO
    XPLINK              NO
    MODULE SIZE (HEX)   000000B8
    DASD SIZE (HEX)     00001000


1 ENTRY POINT AND ALIAS SUMMARY:

  NAME:            ENTRY TYPE AMODE C_OFFSET CLASS NAME        STATUS

  CALCSHRS          MAIN_EP      24 00000000 B_TEXT

                          *** E N D   O F   O P E R A T I O N   S U M M A R Y   R E P O R T ***




1z/OS V2 R3 BINDER     22:14:14 SUNDAY DECEMBER  6, 2020
 BATCH EMULATOR  JOB(KC03I4CA) STEP(JSTEP08 ) PGM= HEWL
 IEW2008I 0F03 PROCESSING COMPLETED.  RETURN CODE =  0.



1----------------------
 MESSAGE SUMMARY REPORT
 ----------------------
  TERMINAL MESSAGES      (SEVERITY = 16)
  NONE

  SEVERE MESSAGES        (SEVERITY = 12)
  NONE

  ERROR MESSAGES         (SEVERITY = 08)
  NONE

  WARNING MESSAGES       (SEVERITY = 04)
  NONE

  INFORMATIONAL MESSAGES (SEVERITY = 00)
  2008


  **** END OF MESSAGE SUMMARY REPORT ****

012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  1
 22:14                                              MONTHLY INVESTMENT TRANSACTIONS
0                                                      ENDOWMENT SHARE   TRANSACTION       TRANSACTION CHANGE     NEW ENDOWMENT SHARE
 ORCHESTRA NAME                                       AMOUNT AND VALUE          TYPE   SHARE AMOUNT AND VALUE        AMOUNT AND VALUE
 -----------------------------------------------   -------------------  ------------   ----------------------     -------------------
0Berlin Philharmonic                                       15,148.4760  DEPOSIT                   4,025.0050              19,173.4810
 FUND NUMBER/NAME:   62/THOS JEFFERSON HIGH YLD            $136,184.80                            $36,184.80              $172,369.60
0Vienna Philharmonic                                       94,986.8650  DEPOSIT                   5,587.7990             100,574.6650
 FUND NUMBER/NAME:   55/VIENNA PHILH HIGH YIELD          $1,124,644.49                            $66,159.55            $1,190,804.04
0Chicago Symphony Orchestra                               999,999.9900  WITHDRAWAL      (         7,213.5000)            992,786.4900
 FUND NUMBER/NAME:   51/21ST CENT MONEY MKT FUND           $999,999.99                      (      $7,213.50)             $992,786.49
0Boston Symphony Orchestra                                 51,799.7910  REINVESTMENT                 11.3960              51,811.1870
 FUND NUMBER/NAME:    3/NEW YORK TAX FREE FUND           $1,238,533.02                               $272.48            $1,238,805.50
0Kansas City Symphony
 *** FUND NUMBER NOT FOUND ***                           $1,112,233.90  WITHDRAWAL NOT PROCESSED      ($0.00)            $1,112,233.9
0New York Philharmonic                                    119,219.1130  DEPOSIT                      66.3190             119,285.4330
 FUND NUMBER/NAME:   33/MONEY MKT SECURE FUND            $1,111,122.14                               $618.10            $1,111,740.24
0Berlin State Orchestra                                    31,614.8900  REINVESTMENT                  6.0060              31,620.8970
 FUND NUMBER/NAME:   77/FRANKLIN ROOSEVELT FUND          $1,114,424.90                               $211.74            $1,114,636.64
0Grand Rapids Symphony Orchestra
 *** FUND NUMBER NOT FOUND ***                             $928,415.70  DEPOSIT NOT PROCESSED          $0.00               $928,415.7
0Seattle Symphony Orchestra                                86,303.7540  DEPOSIT                     678.6510              86,982.4060
 FUND NUMBER/NAME:  101/WASHINGTON & ADAMS FUND          $1,108,140.21                             $8,713.89            $1,116,854.10
0Symphony Orchestra of the Bavarian Radio            UNKNOWN ORCHESTRA  EXCHANGE OUT NOT PROCESSED
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  2
 22:14                                              MONTHLY INVESTMENT TRANSACTIONS
0                                                      ENDOWMENT SHARE   TRANSACTION       TRANSACTION CHANGE     NEW ENDOWMENT SHARE
 ORCHESTRA NAME                                       AMOUNT AND VALUE          TYPE   SHARE AMOUNT AND VALUE        AMOUNT AND VALUE
 -----------------------------------------------   -------------------  ------------   ----------------------     -------------------
0Orchestra of the German Opera Berlin                     294,780.4230  REINVESTMENT                 82.5380             294,862.9610
 FUND NUMBER/NAME:   63/JAMES MONROE HIGH YLD            $2,222,644.39                               $622.34            $2,223,266.73
0Orchestra of Paris                                        11,323.4470  REINVESTMENT                  2.6040              11,326.0520
 FUND NUMBER/NAME:    4/HONG KONG INVESTORS FUND           $226,468.95                                $52.09              $226,521.04
0National Orchestra of France                              29,221.8000  REINVESTMENT                  4.9670              29,226.7670
 FUND NUMBER/NAME:   48/HONG KONG MONEY FUND               $226,468.95                                $38.50              $226,507.45
0London Philharmonic Orchestra                              6,779.6590  WITHDRAWAL NOT PROCESSED     (0.0000)              6,779.6590
 FUND NUMBER/NAME:   22/CITY OF CORTLAND BLDG               $99,999.98                                ($0.00)              $99,999.98
0London Symphony Orchestra
 *** FUND NUMBER NOT FOUND ***                           $1,104,812.33  DEPOSIT NOT PROCESSED          $0.00             $1,104,812.3
0Philharmonia Orchestra                                     6,773.7230  DEPOSIT                     224.5700               6,998.2940
 FUND NUMBER/NAME:   22/CITY OF CORTLAND BLDG               $99,912.42                             $3,312.42              $103,224.84
0San Francisco Symphony                                    40,799.6730  WITHDRAWAL      (         1,125.2090)             39,674.4630
 FUND NUMBER/NAME:    6/CITY OF DEKALB BLDG FUND         $1,000,000.00                      (     $27,578.89)             $972,421.11
0Scottish National Orchestra                               56,085.2490  TRANSFER OUT NOT PROCESSED   (0.0000)             56,085.2490
 FUND NUMBER/NAME:   46/JOHN PHILIP SOUSA FUND             $999,999.99                                ($0.00)             $999,999.99
0National Orchestra of Ireland                            116,731.5170  TRANSFER OUT NOT PROCESSED   (0.0000)            116,731.5170
 FUND NUMBER/NAME:    5/BRIDGE BUILDING FUND             $1,500,000.00                                ($0.00)           $1,500,000.00
0Czech Philharmonic                                        84,459.4580  WITHDRAWAL NOT PROCESSED     (0.0000)             84,459.4580
 FUND NUMBER/NAME:   55/VIENNA PHILH HIGH YIELD            $999,999.99                                ($0.00)             $999,999.99
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  3
 22:14                                              MONTHLY INVESTMENT TRANSACTIONS
0                                                      ENDOWMENT SHARE   TRANSACTION       TRANSACTION CHANGE     NEW ENDOWMENT SHARE
 ORCHESTRA NAME                                       AMOUNT AND VALUE          TYPE   SHARE AMOUNT AND VALUE        AMOUNT AND VALUE
 -----------------------------------------------   -------------------  ------------   ----------------------     -------------------
0Munich Philharmonic                                      141,930.2510  DEPOSIT                  41,543.7220             183,473.9740
 FUND NUMBER/NAME:   59/CIVIL WAR REENACT FUND           $1,750,000.00                           $512,234.10            $2,262,234.10
0Orchestra of the Vienna State Opera                      200,637.0470  REINVESTMENT                 34.1080             200,671.1560
 FUND NUMBER/NAME:   24/FRANKLIN MONEY FUND              $1,890,000.99                               $321.30            $1,890,322.29
0Detroit Symphony                                          41,684.0340  REINVESTMENT                 10.0040              41,694.0380
 FUND NUMBER/NAME:   58/LONDON INVESTORS FUND              $999,999.99                               $240.00            $1,000,239.99
0Cleveland Orchestra                                       10,392.1180  REINVESTMENT                  1.2470              10,393.3650
 FUND NUMBER/NAME:   83/FEDERAL RESERVE FUND               $103,817.26                                $12.46              $103,829.72
0St. Louis Symphony Orchestra                              12,579.7060  REINVESTMENT                  2.6420              12,582.3480
 FUND NUMBER/NAME:   30/SINGAPORE INVESTORS FUND           $108,311.27                                $22.75              $108,334.02
0National Orchestra of Wales                         UNKNOWN ORCHESTRA  EXCHANGE OUT NOT PROCESSED
0Hong Kong Symphony Orchestra                             270,457.6970  DEPOSIT                 431,083.6330             701,541.3310
 FUND NUMBER/NAME:   13/ZURICH INVESTORS FUND            $1,950,000.00                         $3,108,113.00            $5,058,113.00
0NHK Symphony Orchestra Tokyo                             104,210.0870  REINVESTMENT                 23.9680             104,234.0550
 FUND NUMBER/NAME:   58/LONDON INVESTORS FUND            $2,500,000.00                               $575.00            $2,500,575.00
0Beijing Philharmonic                                     140,926.8680  REINVESTMENT                 29.5950             140,956.4630
 FUND NUMBER/NAME:  101/WASHINGTON & ADAMS FUND          $1,809,500.99                               $380.00            $1,809,880.99
0Philharmonic Hamburg                                     436,999.2710  DEPOSIT                 441,453.3620             878,452.6340
 FUND NUMBER/NAME:   10/20TH CENT MONEY MKT FUND         $6,000,000.00                         $6,061,154.67           $12,061,154.67
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  4
 22:14                                              MONTHLY INVESTMENT TRANSACTIONS
0                                                      ENDOWMENT SHARE   TRANSACTION       TRANSACTION CHANGE     NEW ENDOWMENT SHARE
 ORCHESTRA NAME                                       AMOUNT AND VALUE          TYPE   SHARE AMOUNT AND VALUE        AMOUNT AND VALUE
 -----------------------------------------------   -------------------  ------------   ----------------------     -------------------
0North German Radio Symphony Orchestra                    225,022.5020  WITHDRAWAL NOT PROCESSED     (0.0000)            225,022.5020
 FUND NUMBER/NAME:   65/BERLIN PHILH HIGH YIELD          $2,500,000.00                                ($0.00)           $2,500,000.00
0Sao Paulo Symphony Orchestra                             477,707.0060  REINVESTMENT                100.3180             477,807.3240
 FUND NUMBER/NAME:   24/FRANKLIN MONEY FUND              $4,500,000.00                               $945.00            $4,500,945.00
0Florida Philharmonic                                     395,591.6760  DEPOSIT                 130,322.6790             525,914.3550
 FUND NUMBER/NAME:   63/JAMES MONROE HIGH YLD            $2,982,761.24                           $982,633.00            $3,965,394.24
0Lucerne Festival Orchestra
 *** FUND NUMBER NOT FOUND ***                          $11,112,816.24  TRANSFER OUT NOT PROCESSED    ($0.00)           $11,112,816.2
0Beethoven Orchestra Bonn                                   6,760.0340  REINVESTMENT                  1.2840               6,761.3190
 FUND NUMBER/NAME:   77/FRANKLIN ROOSEVELT FUND            $238,291.23                                $45.28              $238,336.51
0Saito Kinen Orchestra                               UNKNOWN ORCHESTRA  REINVESTMENT NOT PROCESSED
0Royal Philharmonic Orchestra                              68,243.8580  WITHDRAWAL NOT PROCESSED     (0.0000)             68,243.8580
 FUND NUMBER/NAME:   21/HUSKIES HIGH YIELD FUND          $1,500,000.00                                ($0.00)           $1,500,000.00
0Orchestra of Opera Lyon                                   16,155.3370  DEPOSIT                      77.4610              16,232.7990
 FUND NUMBER/NAME:   22/CITY OF CORTLAND BLDG              $238,291.23                             $1,142.56              $239,433.79
0Metropolitan Opera Orchestra
 *** FUND NUMBER NOT FOUND ***                           $1,500,000.00  REINVESTMENT NOT PROCESSED     $0.00             $1,500,000.0
0MET Orchestra                                            225,733.5730  REINVESTMENT                 56.4330             225,790.0070
 FUND NUMBER/NAME:   65/BERLIN PHILH HIGH YIELD          $2,507,900.00                               $626.98            $2,508,526.98
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  5
 22:14                                              MONTHLY INVESTMENT TRANSACTIONS
0                                                      ENDOWMENT SHARE   TRANSACTION       TRANSACTION CHANGE     NEW ENDOWMENT SHARE
 ORCHESTRA NAME                                       AMOUNT AND VALUE          TYPE   SHARE AMOUNT AND VALUE        AMOUNT AND VALUE
 -----------------------------------------------   -------------------  ------------   ----------------------     -------------------
0Orpheus Chamber Orchestra
 *** FUND NUMBER NOT FOUND ***                           $2,048,214.21  WITHDRAWAL NOT PROCESSED      ($0.00)            $2,048,214.2
0Los Angeles Philharmonic
 *** FUND NUMBER NOT FOUND ***                          $25,025,025.00  DEPOSIT NOT PROCESSED          $0.00            $25,025,025.0
0Berlin Radio Symphony Orchestra                           27,196.0830  DEPOSIT                     118.1580              27,314.2410
 FUND NUMBER/NAME:   31/CHICAGO INVESTORS FUND             $999,999.99                             $4,344.67            $1,004,344.66
0Prague Philharmonic                                      580,720.0920  TRANSFER OUT    (           954.0370)            579,766.0550
 FUND NUMBER/NAME:   30/SINGAPORE INVESTORS FUND         $5,000,000.00                      (      $8,214.26)           $4,991,785.74
0Bayreuth Festival Orchestra                              397,323.2950  WITHDRAWAL      (           520.0550)            396,803.2400
 FUND NUMBER/NAME:    3/NEW YORK TAX FREE FUND           $9,500,000.00                      (     $12,434.52)           $9,487,565.48
0Camerata Academica Salzburg                               98,312.9380  REINVESTMENT                 11.7970              98,324.7360
 FUND NUMBER/NAME:    2/GEOFFREY'S BBQ FUND                $966,416.19                               $115.97              $966,532.16
0La Scala Orchestra Milan                                 152,565.8800  WITHDRAWAL      (         3,219.4750)            149,346.4040
 FUND NUMBER/NAME:   13/ZURICH INVESTORS FUND            $1,100,000.00                      (     $23,212.42)           $1,076,787.58
0NBC Symphony Orchestra                                   485,436.8930  DEPOSIT                     337.7250             485,774.6180
 FUND NUMBER/NAME:   13/ZURICH INVESTORS FUND            $3,500,000.00                             $2,435.00            $3,502,435.00
0Des Moines Symphony                                       83,534.5210  REINVESTMENT                 18.3770              83,552.8990
 FUND NUMBER/NAME:    2/GEOFFREY'S BBQ FUND                $821,144.35                               $180.65              $821,325.00
0Bamberg Symphony Orchestra                                15,148.4760  DEPOSIT                     478.7530              15,627.2290
 FUND NUMBER/NAME:   62/THOS JEFFERSON HIGH YLD            $136,184.80                             $4,303.99              $140,488.79
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  6
 22:14                                              MONTHLY INVESTMENT TRANSACTIONS
0                                                      ENDOWMENT SHARE   TRANSACTION       TRANSACTION CHANGE     NEW ENDOWMENT SHARE
 ORCHESTRA NAME                                       AMOUNT AND VALUE          TYPE   SHARE AMOUNT AND VALUE        AMOUNT AND VALUE
 -----------------------------------------------   -------------------  ------------   ----------------------     -------------------
0Vienna Symphony Orchestra                                 94,986.8650  DEPOSIT                     735.9700              95,722.8360
 FUND NUMBER/NAME:   55/VIENNA PHILH HIGH YIELD          $1,124,644.49                             $8,713.89            $1,133,358.38
0Salzburg Festival Orchestra                               84,459.4580  WITHDRAWAL      (           684.2230)             83,775.2340
 FUND NUMBER/NAME:   55/VIENNA PHILH HIGH YIELD            $999,999.99                      (      $8,101.21)             $991,898.78
0Houston Symphony Orchestra                                69,463.4330  REINVESTMENT                 10.4190              69,473.8530
 FUND NUMBER/NAME:   46/JOHN PHILIP SOUSA FUND           $1,238,533.02                               $185.78            $1,238,718.80
0Dallas Symphony Orchestra                                 55,611.6950  REINVESTMENT                 12.7900              55,624.4850
 FUND NUMBER/NAME:    4/HONG KONG INVESTORS FUND         $1,112,233.90                               $255.81            $1,112,489.71
0Minnesota Orchestra                                      111,223.4370  REINVESTMENT                 25.5810             111,249.0190
 FUND NUMBER/NAME:   83/FEDERAL RESERVE FUND             $1,111,122.14                               $255.56            $1,111,377.70
0City of Bournemouth Symphony Orchestra                    30,307.9920  WITHDRAWAL      (           294.6890)             30,013.3030
 FUND NUMBER/NAME:   31/CHICAGO INVESTORS FUND           $1,114,424.90                      (     $10,835.74)           $1,103,589.16
0Royal Liverpool Philharmonic Orchestra                    42,239.1120  TRANSFER OUT    (            62.1620)             42,176.9490
 FUND NUMBER/NAME:   21/HUSKIES HIGH YIELD FUND            $928,415.70                      (      $1,366.34)             $927,049.36
0BBC Philharmonic                                          93,592.9230  DEPOSIT                   8,853.3130             102,446.2360
 FUND NUMBER/NAME:   55/VIENNA PHILH HIGH YIELD          $1,108,140.21                           $104,823.23            $1,212,963.44
0BBC Symphony Orchestra of Wales                           12,903.1310  DEPOSIT                   1,914.8060              14,817.9380
 FUND NUMBER/NAME:   48/HONG KONG MONEY FUND                $99,999.27                            $14,839.75              $114,839.02
0Royal Concertgebouw Orchestra                       UNKNOWN ORCHESTRA  DEPOSIT NOT PROCESSED
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  7
 22:14                                              MONTHLY INVESTMENT TRANSACTIONS
0                                                      ENDOWMENT SHARE   TRANSACTION       TRANSACTION CHANGE     NEW ENDOWMENT SHARE
 ORCHESTRA NAME                                       AMOUNT AND VALUE          TYPE   SHARE AMOUNT AND VALUE        AMOUNT AND VALUE
 -----------------------------------------------   -------------------  ------------   ----------------------     -------------------
0Juilliard School of Music Symphony Orchestra              90,683.1650  DEPOSIT                     135.1450              90,818.3110
 FUND NUMBER/NAME:    6/CITY OF DEKALB BLDG FUND         $2,222,644.39                             $3,312.42            $2,225,956.81
0Orchestra of St. Lukes                                    24,041.2890  EXCHANGE OUT    (         2,927.6950)             21,113.5940
 FUND NUMBER/NAME:   24/FRANKLIN MONEY FUND                $226,468.95                      (     $27,578.89)             $198,890.06
0Singapore Symphony Orchestra                              99,999.9800  WITHDRAWAL NOT PROCESSED     (0.0000)             99,999.9800
 FUND NUMBER/NAME:   51/21ST CENT MONEY MKT FUND            $99,999.98                                ($0.00)              $99,999.98
                                                ----------------------               ------------------------  ----------------------
 TRANSACTIONS:  63               SHARE TOTALS:          7,470,809.5510                         1,051,082.1000          8,521,891.6670
                                DOLLAR TOTALS:         $122,029,308.07                         $10,801,862.96         $132,831,171.03
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  1
 22:14                                                   LOW INVESTMENT REPORT
0ORCHESTRA NAME                                   FUND NUMBER    FUND NAME                    CURRENT SHARE AMOUNT      CURRENT VALUE
 ---------------------------------------------    -----------    -------------------------    --------------------    ---------------
0Berlin Philharmonic                                       62    THOS JEFFERSON HIGH YLD               19,173.4810        $172,369.60
0Chicago Symphony Orchestra                                51    21ST CENT MONEY MKT FUND             992,786.4900        $992,786.49
0Orchestra of Paris                                         4    HONG KONG INVESTORS FUND              11,326.0520        $226,521.04
0National Orchestra of France                              48    HONG KONG MONEY FUND                  29,226.7670        $226,507.45
0London Philharmonic Orchestra                             22    CITY OF CORTLAND BLDG                  6,779.6590         $99,999.98
0Philharmonia Orchestra                                    22    CITY OF CORTLAND BLDG                  6,998.2940        $103,224.84
0San Francisco Symphony                                     6    CITY OF DEKALB BLDG FUND              39,674.4630        $972,421.11
0Scottish National Orchestra                               46    JOHN PHILIP SOUSA FUND                56,085.2490        $999,999.99
0Czech Philharmonic                                        55    VIENNA PHILH HIGH YIELD               84,459.4580        $999,999.99
0Cleveland Orchestra                                       83    FEDERAL RESERVE FUND                  10,393.3650        $103,829.72
0St. Louis Symphony Orchestra                              30    SINGAPORE INVESTORS FUND              12,582.3480        $108,334.02
0Beethoven Orchestra Bonn                                  77    FRANKLIN ROOSEVELT FUND                6,761.3190        $238,336.51
0Orchestra of Opera Lyon                                   22    CITY OF CORTLAND BLDG                 16,232.7990        $239,433.79
0Camerata Academica Salzburg                                2    GEOFFREY'S BBQ FUND                   98,324.7360        $966,532.16
0Des Moines Symphony                                        2    GEOFFREY'S BBQ FUND                   83,552.8990        $821,325.00
0Bamberg Symphony Orchestra                                62    THOS JEFFERSON HIGH YLD               15,627.2290        $140,488.79
012/06/2020                                       ORCHESTRAL INVESTMENTS COMPANY, INC.                                       PAGE:  2
 22:14                                                   LOW INVESTMENT REPORT
0ORCHESTRA NAME                                   FUND NUMBER    FUND NAME                    CURRENT SHARE AMOUNT      CURRENT VALUE
 ---------------------------------------------    -----------    -------------------------    --------------------    ---------------
0Salzburg Festival Orchestra                               55    VIENNA PHILH HIGH YIELD               83,775.2340        $991,898.78
0Royal Liverpool Philharmonic Orchestra                    21    HUSKIES HIGH YIELD FUND               42,176.9490        $927,049.36
0BBC Symphony Orchestra of Wales                           48    HONG KONG MONEY FUND                  14,817.9380        $114,839.02
0Orchestra of St. Lukes                                    24    FRANKLIN MONEY FUND                   21,113.5940        $198,890.06
0Singapore Symphony Orchestra                              51    21ST CENT MONEY MKT FUND              99,999.9800         $99,999.98